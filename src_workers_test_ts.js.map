{"version":3,"file":"src_workers_test_ts.js","mappings":";;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED,sCAAsC;;AAEtC;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC,UAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,qDAAqD;;AAErD,yDAAyD;;AAEzD,2DAA2D;;AAE3D,uDAAuD;;AAEvD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8EAA8E;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,mDAAmD;;AAEnD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,kBAAkB,4BAA4B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA,CAAC;AACD,IAAI,IAAyD;AAC7D;AACA,KAAK,EAGwB;;;;;;;UCrsD7B;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;ACJ8B;AAG9B,UAAU,CAAC;IACT,+CAAI,EAAE,CAAC,IAAI,CAAC,UAAC,MAAwB;QACnC,IAAM,CAAC,GAAG,GAAG,CAAC;QACd,IAAM,CAAC,GAAG,CAAC,CAAC;QAGZ,IAAI,IAAI,GAAa,EAAE,CAAC;QACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAC1B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC;SAChC;QAID,IAAM,CAAC,GAAG,IAAI,YAAY,CACxB,MAAM,CAAC,KAAK,CAAC,MAAM,EACnB,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EACzB,CAAC,GAAG,CAAC,CACN,CAAC;QACF,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAEZ,IAAM,CAAC,GAAG,IAAI,YAAY,CACxB,MAAM,CAAC,KAAK,CAAC,MAAM,EACnB,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EACzB,CAAC,GAAG,CAAC,CACN,CAAC;QAEF,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAGZ,IAAI,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC;QACpD,OAAO,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;IAC5C,CAAC,CAAC,CAAC;AACL,CAAC,EAAE,IAAI,CAAC,CAAC;AAET,IAAI,CAAC,SAAS,GAAG,UAAC,EAAsB;QAAZ,QAAQ;IAClC,IAAI,CAAC,WAAW,CAAC;QACf,MAAM,EAAE,EAAE;KACX,CAAC,CAAC;AACL,CAAC,CAAC","sources":["webpack://my-sample-typescript-app/./src/tsne.js","webpack://my-sample-typescript-app/webpack/bootstrap","webpack://my-sample-typescript-app/webpack/runtime/compat get default export","webpack://my-sample-typescript-app/webpack/runtime/define property getters","webpack://my-sample-typescript-app/webpack/runtime/hasOwnProperty shorthand","webpack://my-sample-typescript-app/webpack/runtime/make namespace object","webpack://my-sample-typescript-app/./src/workers/test.ts"],"sourcesContent":["\nvar Module = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  \n  return (\nfunction(Module) {\n  Module = Module || {};\n\nvar Module = typeof Module != \"undefined\" ? Module : {};\n\nvar readyPromiseResolve, readyPromiseReject;\n\nModule[\"ready\"] = new Promise(function(resolve, reject) {\n readyPromiseResolve = resolve;\n readyPromiseReject = reject;\n});\n\n[ \"_main\", \"_version\", \"_fflush\", \"onRuntimeInitialized\" ].forEach(prop => {\n if (!Object.getOwnPropertyDescriptor(Module[\"ready\"], prop)) {\n  Object.defineProperty(Module[\"ready\"], prop, {\n   get: () => abort(\"You are getting \" + prop + \" on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js\"),\n   set: () => abort(\"You are setting \" + prop + \" on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js\")\n  });\n }\n});\n\nvar moduleOverrides = Object.assign({}, Module);\n\nvar arguments_ = [];\n\nvar thisProgram = \"./this.program\";\n\nvar quit_ = (status, toThrow) => {\n throw toThrow;\n};\n\nvar ENVIRONMENT_IS_WEB = false;\n\nvar ENVIRONMENT_IS_WORKER = true;\n\nvar ENVIRONMENT_IS_NODE = false;\n\nvar ENVIRONMENT_IS_SHELL = false;\n\nif (Module[\"ENVIRONMENT\"]) {\n throw new Error(\"Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -sENVIRONMENT=web or -sENVIRONMENT=node)\");\n}\n\nvar scriptDirectory = \"\";\n\nfunction locateFile(path) {\n if (Module[\"locateFile\"]) {\n  return Module[\"locateFile\"](path, scriptDirectory);\n }\n return scriptDirectory + path;\n}\n\nvar read_, readAsync, readBinary, setWindowTitle;\n\nfunction logExceptionOnExit(e) {\n if (e instanceof ExitStatus) return;\n let toLog = e;\n if (e && typeof e == \"object\" && e.stack) {\n  toLog = [ e, e.stack ];\n }\n err(\"exiting due to exception: \" + toLog);\n}\n\nif (ENVIRONMENT_IS_SHELL) {\n if (typeof process == \"object\" && typeof require === \"function\" || typeof window == \"object\" || typeof importScripts == \"function\") throw new Error(\"not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)\");\n if (typeof read != \"undefined\") {\n  read_ = function shell_read(f) {\n   return read(f);\n  };\n }\n readBinary = function readBinary(f) {\n  let data;\n  if (typeof readbuffer == \"function\") {\n   return new Uint8Array(readbuffer(f));\n  }\n  data = read(f, \"binary\");\n  assert(typeof data == \"object\");\n  return data;\n };\n readAsync = function readAsync(f, onload, onerror) {\n  setTimeout(() => onload(readBinary(f)), 0);\n };\n if (typeof scriptArgs != \"undefined\") {\n  arguments_ = scriptArgs;\n } else if (typeof arguments != \"undefined\") {\n  arguments_ = arguments;\n }\n if (typeof quit == \"function\") {\n  quit_ = (status, toThrow) => {\n   logExceptionOnExit(toThrow);\n   quit(status);\n  };\n }\n if (typeof print != \"undefined\") {\n  if (typeof console == \"undefined\") console = {};\n  console.log = print;\n  console.warn = console.error = typeof printErr != \"undefined\" ? printErr : print;\n }\n} else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n if (ENVIRONMENT_IS_WORKER) {\n  scriptDirectory = self.location.href;\n } else if (typeof document != \"undefined\" && document.currentScript) {\n  scriptDirectory = document.currentScript.src;\n }\n if (_scriptDir) {\n  scriptDirectory = _scriptDir;\n }\n if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n  scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf(\"/\") + 1);\n } else {\n  scriptDirectory = \"\";\n }\n if (!(typeof window == \"object\" || typeof importScripts == \"function\")) throw new Error(\"not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)\");\n {\n  read_ = url => {\n   var xhr = new XMLHttpRequest();\n   xhr.open(\"GET\", url, false);\n   xhr.send(null);\n   return xhr.responseText;\n  };\n  if (ENVIRONMENT_IS_WORKER) {\n   readBinary = url => {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", url, false);\n    xhr.responseType = \"arraybuffer\";\n    xhr.send(null);\n    return new Uint8Array(xhr.response);\n   };\n  }\n  readAsync = (url, onload, onerror) => {\n   var xhr = new XMLHttpRequest();\n   xhr.open(\"GET\", url, true);\n   xhr.responseType = \"arraybuffer\";\n   xhr.onload = () => {\n    if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n     onload(xhr.response);\n     return;\n    }\n    onerror();\n   };\n   xhr.onerror = onerror;\n   xhr.send(null);\n  };\n }\n setWindowTitle = title => document.title = title;\n} else {\n throw new Error(\"environment detection error\");\n}\n\nvar out = Module[\"print\"] || console.log.bind(console);\n\nvar err = Module[\"printErr\"] || console.warn.bind(console);\n\nObject.assign(Module, moduleOverrides);\n\nmoduleOverrides = null;\n\ncheckIncomingModuleAPI();\n\nif (Module[\"arguments\"]) arguments_ = Module[\"arguments\"];\n\nlegacyModuleProp(\"arguments\", \"arguments_\");\n\nif (Module[\"thisProgram\"]) thisProgram = Module[\"thisProgram\"];\n\nlegacyModuleProp(\"thisProgram\", \"thisProgram\");\n\nif (Module[\"quit\"]) quit_ = Module[\"quit\"];\n\nlegacyModuleProp(\"quit\", \"quit_\");\n\nassert(typeof Module[\"memoryInitializerPrefixURL\"] == \"undefined\", \"Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead\");\n\nassert(typeof Module[\"pthreadMainPrefixURL\"] == \"undefined\", \"Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead\");\n\nassert(typeof Module[\"cdInitializerPrefixURL\"] == \"undefined\", \"Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead\");\n\nassert(typeof Module[\"filePackagePrefixURL\"] == \"undefined\", \"Module.filePackagePrefixURL option was removed, use Module.locateFile instead\");\n\nassert(typeof Module[\"read\"] == \"undefined\", \"Module.read option was removed (modify read_ in JS)\");\n\nassert(typeof Module[\"readAsync\"] == \"undefined\", \"Module.readAsync option was removed (modify readAsync in JS)\");\n\nassert(typeof Module[\"readBinary\"] == \"undefined\", \"Module.readBinary option was removed (modify readBinary in JS)\");\n\nassert(typeof Module[\"setWindowTitle\"] == \"undefined\", \"Module.setWindowTitle option was removed (modify setWindowTitle in JS)\");\n\nassert(typeof Module[\"TOTAL_MEMORY\"] == \"undefined\", \"Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY\");\n\nlegacyModuleProp(\"read\", \"read_\");\n\nlegacyModuleProp(\"readAsync\", \"readAsync\");\n\nlegacyModuleProp(\"readBinary\", \"readBinary\");\n\nlegacyModuleProp(\"setWindowTitle\", \"setWindowTitle\");\n\nvar IDBFS = \"IDBFS is no longer included by default; build with -lidbfs.js\";\n\nvar PROXYFS = \"PROXYFS is no longer included by default; build with -lproxyfs.js\";\n\nvar WORKERFS = \"WORKERFS is no longer included by default; build with -lworkerfs.js\";\n\nvar NODEFS = \"NODEFS is no longer included by default; build with -lnodefs.js\";\n\nassert(!ENVIRONMENT_IS_WEB, \"web environment detected but not enabled at build time.  Add 'web' to `-sENVIRONMENT` to enable.\");\n\nassert(!ENVIRONMENT_IS_NODE, \"node environment detected but not enabled at build time.  Add 'node' to `-sENVIRONMENT` to enable.\");\n\nassert(!ENVIRONMENT_IS_SHELL, \"shell environment detected but not enabled at build time.  Add 'shell' to `-sENVIRONMENT` to enable.\");\n\nvar STACK_ALIGN = 16;\n\nvar POINTER_SIZE = 4;\n\nfunction getNativeTypeSize(type) {\n switch (type) {\n case \"i1\":\n case \"i8\":\n case \"u8\":\n  return 1;\n\n case \"i16\":\n case \"u16\":\n  return 2;\n\n case \"i32\":\n case \"u32\":\n  return 4;\n\n case \"i64\":\n case \"u64\":\n  return 8;\n\n case \"float\":\n  return 4;\n\n case \"double\":\n  return 8;\n\n default:\n  {\n   if (type[type.length - 1] === \"*\") {\n    return POINTER_SIZE;\n   }\n   if (type[0] === \"i\") {\n    const bits = Number(type.substr(1));\n    assert(bits % 8 === 0, \"getNativeTypeSize invalid bits \" + bits + \", type \" + type);\n    return bits / 8;\n   }\n   return 0;\n  }\n }\n}\n\nfunction legacyModuleProp(prop, newName) {\n if (!Object.getOwnPropertyDescriptor(Module, prop)) {\n  Object.defineProperty(Module, prop, {\n   configurable: true,\n   get: function() {\n    abort(\"Module.\" + prop + \" has been replaced with plain \" + newName + \" (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)\");\n   }\n  });\n }\n}\n\nfunction ignoredModuleProp(prop) {\n if (Object.getOwnPropertyDescriptor(Module, prop)) {\n  abort(\"`Module.\" + prop + \"` was supplied but `\" + prop + \"` not included in INCOMING_MODULE_JS_API\");\n }\n}\n\nfunction isExportedByForceFilesystem(name) {\n return name === \"FS_createPath\" || name === \"FS_createDataFile\" || name === \"FS_createPreloadedFile\" || name === \"FS_unlink\" || name === \"addRunDependency\" || name === \"FS_createLazyFile\" || name === \"FS_createDevice\" || name === \"removeRunDependency\";\n}\n\nfunction missingLibrarySymbol(sym) {\n if (typeof globalThis !== \"undefined\" && !Object.getOwnPropertyDescriptor(globalThis, sym)) {\n  Object.defineProperty(globalThis, sym, {\n   configurable: true,\n   get: function() {\n    var msg = \"`\" + sym + \"` is a library symbol and not included by default; add it to your library.js __deps or to DEFAULT_LIBRARY_FUNCS_TO_INCLUDE on the command line\";\n    if (isExportedByForceFilesystem(sym)) {\n     msg += \". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you\";\n    }\n    warnOnce(msg);\n    return undefined;\n   }\n  });\n }\n}\n\nfunction unexportedRuntimeSymbol(sym) {\n if (!Object.getOwnPropertyDescriptor(Module, sym)) {\n  Object.defineProperty(Module, sym, {\n   configurable: true,\n   get: function() {\n    var msg = \"'\" + sym + \"' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\";\n    if (isExportedByForceFilesystem(sym)) {\n     msg += \". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you\";\n    }\n    abort(msg);\n   }\n  });\n }\n}\n\nvar tempRet0 = 0;\n\nvar setTempRet0 = value => {\n tempRet0 = value;\n};\n\nvar getTempRet0 = () => tempRet0;\n\nvar wasmBinary;\n\nif (Module[\"wasmBinary\"]) wasmBinary = Module[\"wasmBinary\"];\n\nlegacyModuleProp(\"wasmBinary\", \"wasmBinary\");\n\nvar noExitRuntime = Module[\"noExitRuntime\"] || true;\n\nlegacyModuleProp(\"noExitRuntime\", \"noExitRuntime\");\n\nif (typeof WebAssembly != \"object\") {\n abort(\"no native wasm support detected\");\n}\n\nvar wasmMemory;\n\nvar ABORT = false;\n\nvar EXITSTATUS;\n\nfunction assert(condition, text) {\n if (!condition) {\n  abort(\"Assertion failed\" + (text ? \": \" + text : \"\"));\n }\n}\n\nfunction _free() {\n abort(\"free() called but not included in the build - add '_free' to EXPORTED_FUNCTIONS\");\n}\n\nvar UTF8Decoder = typeof TextDecoder != \"undefined\" ? new TextDecoder(\"utf8\") : undefined;\n\nfunction UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {\n idx >>>= 0;\n var endIdx = idx + maxBytesToRead;\n var endPtr = idx;\n while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n  return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n }\n var str = \"\";\n while (idx < endPtr) {\n  var u0 = heapOrArray[idx++];\n  if (!(u0 & 128)) {\n   str += String.fromCharCode(u0);\n   continue;\n  }\n  var u1 = heapOrArray[idx++] & 63;\n  if ((u0 & 224) == 192) {\n   str += String.fromCharCode((u0 & 31) << 6 | u1);\n   continue;\n  }\n  var u2 = heapOrArray[idx++] & 63;\n  if ((u0 & 240) == 224) {\n   u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n  } else {\n   if ((u0 & 248) != 240) warnOnce(\"Invalid UTF-8 leading byte 0x\" + u0.toString(16) + \" encountered when deserializing a UTF-8 string in wasm memory to a JS string!\");\n   u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heapOrArray[idx++] & 63;\n  }\n  if (u0 < 65536) {\n   str += String.fromCharCode(u0);\n  } else {\n   var ch = u0 - 65536;\n   str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n  }\n }\n return str;\n}\n\nfunction UTF8ToString(ptr, maxBytesToRead) {\n ptr >>>= 0;\n return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\";\n}\n\nfunction stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n outIdx >>>= 0;\n if (!(maxBytesToWrite > 0)) return 0;\n var startIdx = outIdx;\n var endIdx = outIdx + maxBytesToWrite - 1;\n for (var i = 0; i < str.length; ++i) {\n  var u = str.charCodeAt(i);\n  if (u >= 55296 && u <= 57343) {\n   var u1 = str.charCodeAt(++i);\n   u = 65536 + ((u & 1023) << 10) | u1 & 1023;\n  }\n  if (u <= 127) {\n   if (outIdx >= endIdx) break;\n   heap[outIdx++ >>> 0] = u;\n  } else if (u <= 2047) {\n   if (outIdx + 1 >= endIdx) break;\n   heap[outIdx++ >>> 0] = 192 | u >> 6;\n   heap[outIdx++ >>> 0] = 128 | u & 63;\n  } else if (u <= 65535) {\n   if (outIdx + 2 >= endIdx) break;\n   heap[outIdx++ >>> 0] = 224 | u >> 12;\n   heap[outIdx++ >>> 0] = 128 | u >> 6 & 63;\n   heap[outIdx++ >>> 0] = 128 | u & 63;\n  } else {\n   if (outIdx + 3 >= endIdx) break;\n   if (u > 1114111) warnOnce(\"Invalid Unicode code point 0x\" + u.toString(16) + \" encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x10FFFF).\");\n   heap[outIdx++ >>> 0] = 240 | u >> 18;\n   heap[outIdx++ >>> 0] = 128 | u >> 12 & 63;\n   heap[outIdx++ >>> 0] = 128 | u >> 6 & 63;\n   heap[outIdx++ >>> 0] = 128 | u & 63;\n  }\n }\n heap[outIdx >>> 0] = 0;\n return outIdx - startIdx;\n}\n\nfunction stringToUTF8(str, outPtr, maxBytesToWrite) {\n assert(typeof maxBytesToWrite == \"number\", \"stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!\");\n return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n}\n\nfunction lengthBytesUTF8(str) {\n var len = 0;\n for (var i = 0; i < str.length; ++i) {\n  var c = str.charCodeAt(i);\n  if (c <= 127) {\n   len++;\n  } else if (c <= 2047) {\n   len += 2;\n  } else if (c >= 55296 && c <= 57343) {\n   len += 4;\n   ++i;\n  } else {\n   len += 3;\n  }\n }\n return len;\n}\n\nvar HEAP, buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n\nfunction updateGlobalBufferAndViews(buf) {\n buffer = buf;\n Module[\"HEAP8\"] = HEAP8 = new Int8Array(buf);\n Module[\"HEAP16\"] = HEAP16 = new Int16Array(buf);\n Module[\"HEAP32\"] = HEAP32 = new Int32Array(buf);\n Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buf);\n Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(buf);\n Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(buf);\n Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(buf);\n Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(buf);\n}\n\nvar TOTAL_STACK = 5242880;\n\nif (Module[\"TOTAL_STACK\"]) assert(TOTAL_STACK === Module[\"TOTAL_STACK\"], \"the stack size can no longer be determined at runtime\");\n\nvar INITIAL_MEMORY = Module[\"INITIAL_MEMORY\"] || 2147483648;\n\nlegacyModuleProp(\"INITIAL_MEMORY\", \"INITIAL_MEMORY\");\n\nassert(INITIAL_MEMORY >= TOTAL_STACK, \"INITIAL_MEMORY should be larger than TOTAL_STACK, was \" + INITIAL_MEMORY + \"! (TOTAL_STACK=\" + TOTAL_STACK + \")\");\n\nassert(typeof Int32Array != \"undefined\" && typeof Float64Array !== \"undefined\" && Int32Array.prototype.subarray != undefined && Int32Array.prototype.set != undefined, \"JS engine does not provide full typed array support\");\n\nassert(!Module[\"wasmMemory\"], \"Use of `wasmMemory` detected.  Use -sIMPORTED_MEMORY to define wasmMemory externally\");\n\nassert(INITIAL_MEMORY == 2147483648, \"Detected runtime INITIAL_MEMORY setting.  Use -sIMPORTED_MEMORY to define wasmMemory dynamically\");\n\nvar wasmTable;\n\nfunction writeStackCookie() {\n var max = _emscripten_stack_get_end();\n assert((max & 3) == 0);\n HEAP32[max >>> 2] = 34821223;\n HEAP32[max + 4 >>> 2] = 2310721022;\n HEAPU32[0 >>> 0] = 1668509029;\n}\n\nfunction checkStackCookie() {\n if (ABORT) return;\n var max = _emscripten_stack_get_end();\n var cookie1 = HEAPU32[max >>> 2];\n var cookie2 = HEAPU32[max + 4 >>> 2];\n if (cookie1 != 34821223 || cookie2 != 2310721022) {\n  abort(\"Stack overflow! Stack cookie has been overwritten at 0x\" + max.toString(16) + \", expected hex dwords 0x89BACDFE and 0x2135467, but received 0x\" + cookie2.toString(16) + \" 0x\" + cookie1.toString(16));\n }\n if (HEAPU32[0 >>> 0] !== 1668509029) abort(\"Runtime error: The application has corrupted its heap memory area (address zero)!\");\n}\n\n(function() {\n var h16 = new Int16Array(1);\n var h8 = new Int8Array(h16.buffer);\n h16[0] = 25459;\n if (h8[0] !== 115 || h8[1] !== 99) throw \"Runtime error: expected the system to be little-endian! (Run with -sSUPPORT_BIG_ENDIAN to bypass)\";\n})();\n\nvar __ATPRERUN__ = [];\n\nvar __ATINIT__ = [];\n\nvar __ATEXIT__ = [];\n\nvar __ATPOSTRUN__ = [];\n\nvar runtimeInitialized = false;\n\nfunction keepRuntimeAlive() {\n return noExitRuntime;\n}\n\nfunction preRun() {\n if (Module[\"preRun\"]) {\n  if (typeof Module[\"preRun\"] == \"function\") Module[\"preRun\"] = [ Module[\"preRun\"] ];\n  while (Module[\"preRun\"].length) {\n   addOnPreRun(Module[\"preRun\"].shift());\n  }\n }\n callRuntimeCallbacks(__ATPRERUN__);\n}\n\nfunction initRuntime() {\n assert(!runtimeInitialized);\n runtimeInitialized = true;\n checkStackCookie();\n callRuntimeCallbacks(__ATINIT__);\n}\n\nfunction postRun() {\n checkStackCookie();\n if (Module[\"postRun\"]) {\n  if (typeof Module[\"postRun\"] == \"function\") Module[\"postRun\"] = [ Module[\"postRun\"] ];\n  while (Module[\"postRun\"].length) {\n   addOnPostRun(Module[\"postRun\"].shift());\n  }\n }\n callRuntimeCallbacks(__ATPOSTRUN__);\n}\n\nfunction addOnPreRun(cb) {\n __ATPRERUN__.unshift(cb);\n}\n\nfunction addOnInit(cb) {\n __ATINIT__.unshift(cb);\n}\n\nfunction addOnExit(cb) {}\n\nfunction addOnPostRun(cb) {\n __ATPOSTRUN__.unshift(cb);\n}\n\nassert(Math.imul, \"This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill\");\n\nassert(Math.fround, \"This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill\");\n\nassert(Math.clz32, \"This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill\");\n\nassert(Math.trunc, \"This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill\");\n\nvar runDependencies = 0;\n\nvar runDependencyWatcher = null;\n\nvar dependenciesFulfilled = null;\n\nvar runDependencyTracking = {};\n\nfunction getUniqueRunDependency(id) {\n var orig = id;\n while (1) {\n  if (!runDependencyTracking[id]) return id;\n  id = orig + Math.random();\n }\n}\n\nfunction addRunDependency(id) {\n runDependencies++;\n if (Module[\"monitorRunDependencies\"]) {\n  Module[\"monitorRunDependencies\"](runDependencies);\n }\n if (id) {\n  assert(!runDependencyTracking[id]);\n  runDependencyTracking[id] = 1;\n  if (runDependencyWatcher === null && typeof setInterval != \"undefined\") {\n   runDependencyWatcher = setInterval(function() {\n    if (ABORT) {\n     clearInterval(runDependencyWatcher);\n     runDependencyWatcher = null;\n     return;\n    }\n    var shown = false;\n    for (var dep in runDependencyTracking) {\n     if (!shown) {\n      shown = true;\n      err(\"still waiting on run dependencies:\");\n     }\n     err(\"dependency: \" + dep);\n    }\n    if (shown) {\n     err(\"(end of list)\");\n    }\n   }, 1e4);\n  }\n } else {\n  err(\"warning: run dependency added without ID\");\n }\n}\n\nfunction removeRunDependency(id) {\n runDependencies--;\n if (Module[\"monitorRunDependencies\"]) {\n  Module[\"monitorRunDependencies\"](runDependencies);\n }\n if (id) {\n  assert(runDependencyTracking[id]);\n  delete runDependencyTracking[id];\n } else {\n  err(\"warning: run dependency removed without ID\");\n }\n if (runDependencies == 0) {\n  if (runDependencyWatcher !== null) {\n   clearInterval(runDependencyWatcher);\n   runDependencyWatcher = null;\n  }\n  if (dependenciesFulfilled) {\n   var callback = dependenciesFulfilled;\n   dependenciesFulfilled = null;\n   callback();\n  }\n }\n}\n\nfunction abort(what) {\n {\n  if (Module[\"onAbort\"]) {\n   Module[\"onAbort\"](what);\n  }\n }\n what = \"Aborted(\" + what + \")\";\n err(what);\n ABORT = true;\n EXITSTATUS = 1;\n var e = new WebAssembly.RuntimeError(what);\n readyPromiseReject(e);\n throw e;\n}\n\nvar FS = {\n error: function() {\n  abort(\"Filesystem support (FS) was not included. The problem is that you are using files from JS, but files were not used from C/C++, so filesystem support was not auto-included. You can force-include filesystem support with -sFORCE_FILESYSTEM\");\n },\n init: function() {\n  FS.error();\n },\n createDataFile: function() {\n  FS.error();\n },\n createPreloadedFile: function() {\n  FS.error();\n },\n createLazyFile: function() {\n  FS.error();\n },\n open: function() {\n  FS.error();\n },\n mkdev: function() {\n  FS.error();\n },\n registerDevice: function() {\n  FS.error();\n },\n analyzePath: function() {\n  FS.error();\n },\n loadFilesFromDB: function() {\n  FS.error();\n },\n ErrnoError: function ErrnoError() {\n  FS.error();\n }\n};\n\nModule[\"FS_createDataFile\"] = FS.createDataFile;\n\nModule[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;\n\nvar dataURIPrefix = \"data:application/octet-stream;base64,\";\n\nfunction isDataURI(filename) {\n return filename.startsWith(dataURIPrefix);\n}\n\nfunction isFileURI(filename) {\n return filename.startsWith(\"file://\");\n}\n\nfunction createExportWrapper(name, fixedasm) {\n return function() {\n  var displayName = name;\n  var asm = fixedasm;\n  if (!fixedasm) {\n   asm = Module[\"asm\"];\n  }\n  assert(runtimeInitialized, \"native function `\" + displayName + \"` called before runtime initialization\");\n  if (!asm[name]) {\n   assert(asm[name], \"exported native function `\" + displayName + \"` not found\");\n  }\n  return asm[name].apply(null, arguments);\n };\n}\n\nvar wasmBinaryFile;\n\nwasmBinaryFile = \"tsne.wasm\";\n\nif (!isDataURI(wasmBinaryFile)) {\n wasmBinaryFile = locateFile(wasmBinaryFile);\n}\n\nfunction getBinary(file) {\n try {\n  if (file == wasmBinaryFile && wasmBinary) {\n   return new Uint8Array(wasmBinary);\n  }\n  if (readBinary) {\n   return readBinary(file);\n  }\n  throw \"both async and sync fetching of the wasm failed\";\n } catch (err) {\n  abort(err);\n }\n}\n\nfunction getBinaryPromise() {\n if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n  if (typeof fetch == \"function\") {\n   return fetch(wasmBinaryFile, {\n    credentials: \"same-origin\"\n   }).then(function(response) {\n    if (!response[\"ok\"]) {\n     throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n    }\n    return response[\"arrayBuffer\"]();\n   }).catch(function() {\n    return getBinary(wasmBinaryFile);\n   });\n  }\n }\n return Promise.resolve().then(function() {\n  return getBinary(wasmBinaryFile);\n });\n}\n\nfunction createWasm() {\n var info = {\n  \"env\": asmLibraryArg,\n  \"wasi_snapshot_preview1\": asmLibraryArg\n };\n function receiveInstance(instance, module) {\n  var exports = instance.exports;\n  Module[\"asm\"] = exports;\n  wasmMemory = Module[\"asm\"][\"memory\"];\n  assert(wasmMemory, \"memory not found in wasm exports\");\n  updateGlobalBufferAndViews(wasmMemory.buffer);\n  wasmTable = Module[\"asm\"][\"__indirect_function_table\"];\n  assert(wasmTable, \"table not found in wasm exports\");\n  addOnInit(Module[\"asm\"][\"__wasm_call_ctors\"]);\n  removeRunDependency(\"wasm-instantiate\");\n }\n addRunDependency(\"wasm-instantiate\");\n var trueModule = Module;\n function receiveInstantiationResult(result) {\n  assert(Module === trueModule, \"the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?\");\n  trueModule = null;\n  receiveInstance(result[\"instance\"]);\n }\n function instantiateArrayBuffer(receiver) {\n  return getBinaryPromise().then(function(binary) {\n   return WebAssembly.instantiate(binary, info);\n  }).then(function(instance) {\n   return instance;\n  }).then(receiver, function(reason) {\n   err(\"failed to asynchronously prepare wasm: \" + reason);\n   if (isFileURI(wasmBinaryFile)) {\n    err(\"warning: Loading from a file URI (\" + wasmBinaryFile + \") is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing\");\n   }\n   abort(reason);\n  });\n }\n function instantiateAsync() {\n  if (!wasmBinary && typeof WebAssembly.instantiateStreaming == \"function\" && !isDataURI(wasmBinaryFile) && typeof fetch == \"function\") {\n   return fetch(wasmBinaryFile, {\n    credentials: \"same-origin\"\n   }).then(function(response) {\n    var result = WebAssembly.instantiateStreaming(response, info);\n    return result.then(receiveInstantiationResult, function(reason) {\n     err(\"wasm streaming compile failed: \" + reason);\n     err(\"falling back to ArrayBuffer instantiation\");\n     return instantiateArrayBuffer(receiveInstantiationResult);\n    });\n   });\n  } else {\n   return instantiateArrayBuffer(receiveInstantiationResult);\n  }\n }\n if (Module[\"instantiateWasm\"]) {\n  try {\n   var exports = Module[\"instantiateWasm\"](info, receiveInstance);\n   return exports;\n  } catch (e) {\n   err(\"Module.instantiateWasm callback failed with error: \" + e);\n   return false;\n  }\n }\n instantiateAsync().catch(readyPromiseReject);\n return {};\n}\n\nvar tempDouble;\n\nvar tempI64;\n\nvar ASM_CONSTS = {};\n\nfunction ExitStatus(status) {\n this.name = \"ExitStatus\";\n this.message = \"Program terminated with exit(\" + status + \")\";\n this.status = status;\n}\n\nfunction callRuntimeCallbacks(callbacks) {\n while (callbacks.length > 0) {\n  callbacks.shift()(Module);\n }\n}\n\nfunction withStackSave(f) {\n var stack = stackSave();\n var ret = f();\n stackRestore(stack);\n return ret;\n}\n\nfunction demangle(func) {\n warnOnce(\"warning: build with -sDEMANGLE_SUPPORT to link in libcxxabi demangling\");\n return func;\n}\n\nfunction demangleAll(text) {\n var regex = /\\b_Z[\\w\\d_]+/g;\n return text.replace(regex, function(x) {\n  var y = demangle(x);\n  return x === y ? x : y + \" [\" + x + \"]\";\n });\n}\n\nfunction getValue(ptr, type = \"i8\") {\n if (type.endsWith(\"*\")) type = \"*\";\n switch (type) {\n case \"i1\":\n  return HEAP8[ptr >>> 0];\n\n case \"i8\":\n  return HEAP8[ptr >>> 0];\n\n case \"i16\":\n  return HEAP16[ptr >>> 1];\n\n case \"i32\":\n  return HEAP32[ptr >>> 2];\n\n case \"i64\":\n  return HEAP32[ptr >>> 2];\n\n case \"float\":\n  return HEAPF32[ptr >>> 2];\n\n case \"double\":\n  return HEAPF64[ptr >>> 3];\n\n case \"*\":\n  return HEAPU32[ptr >>> 2];\n\n default:\n  abort(\"invalid type for getValue: \" + type);\n }\n return null;\n}\n\nfunction handleException(e) {\n if (e instanceof ExitStatus || e == \"unwind\") {\n  return EXITSTATUS;\n }\n quit_(1, e);\n}\n\nfunction jsStackTrace() {\n var error = new Error();\n if (!error.stack) {\n  try {\n   throw new Error();\n  } catch (e) {\n   error = e;\n  }\n  if (!error.stack) {\n   return \"(no stack trace available)\";\n  }\n }\n return error.stack.toString();\n}\n\nfunction setValue(ptr, value, type = \"i8\") {\n if (type.endsWith(\"*\")) type = \"*\";\n switch (type) {\n case \"i1\":\n  HEAP8[ptr >>> 0] = value;\n  break;\n\n case \"i8\":\n  HEAP8[ptr >>> 0] = value;\n  break;\n\n case \"i16\":\n  HEAP16[ptr >>> 1] = value;\n  break;\n\n case \"i32\":\n  HEAP32[ptr >>> 2] = value;\n  break;\n\n case \"i64\":\n  tempI64 = [ value >>> 0, (tempDouble = value, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], \n  HEAP32[ptr >>> 2] = tempI64[0], HEAP32[ptr + 4 >>> 2] = tempI64[1];\n  break;\n\n case \"float\":\n  HEAPF32[ptr >>> 2] = value;\n  break;\n\n case \"double\":\n  HEAPF64[ptr >>> 3] = value;\n  break;\n\n case \"*\":\n  HEAPU32[ptr >>> 2] = value;\n  break;\n\n default:\n  abort(\"invalid type for setValue: \" + type);\n }\n}\n\nfunction stackTrace() {\n var js = jsStackTrace();\n if (Module[\"extraStackTrace\"]) js += \"\\n\" + Module[\"extraStackTrace\"]();\n return demangleAll(js);\n}\n\nfunction warnOnce(text) {\n if (!warnOnce.shown) warnOnce.shown = {};\n if (!warnOnce.shown[text]) {\n  warnOnce.shown[text] = 1;\n  err(text);\n }\n}\n\nfunction writeArrayToMemory(array, buffer) {\n assert(array.length >= 0, \"writeArrayToMemory array must have a length (should be an array or typed array)\");\n HEAP8.set(array, buffer >>> 0);\n}\n\nfunction ___cxa_allocate_exception(size) {\n return _malloc(size + 24) + 24;\n}\n\nfunction ExceptionInfo(excPtr) {\n this.excPtr = excPtr;\n this.ptr = excPtr - 24;\n this.set_type = function(type) {\n  HEAPU32[this.ptr + 4 >>> 2] = type;\n };\n this.get_type = function() {\n  return HEAPU32[this.ptr + 4 >>> 2];\n };\n this.set_destructor = function(destructor) {\n  HEAPU32[this.ptr + 8 >>> 2] = destructor;\n };\n this.get_destructor = function() {\n  return HEAPU32[this.ptr + 8 >>> 2];\n };\n this.set_refcount = function(refcount) {\n  HEAP32[this.ptr >>> 2] = refcount;\n };\n this.set_caught = function(caught) {\n  caught = caught ? 1 : 0;\n  HEAP8[this.ptr + 12 >>> 0] = caught;\n };\n this.get_caught = function() {\n  return HEAP8[this.ptr + 12 >>> 0] != 0;\n };\n this.set_rethrown = function(rethrown) {\n  rethrown = rethrown ? 1 : 0;\n  HEAP8[this.ptr + 13 >>> 0] = rethrown;\n };\n this.get_rethrown = function() {\n  return HEAP8[this.ptr + 13 >>> 0] != 0;\n };\n this.init = function(type, destructor) {\n  this.set_adjusted_ptr(0);\n  this.set_type(type);\n  this.set_destructor(destructor);\n  this.set_refcount(0);\n  this.set_caught(false);\n  this.set_rethrown(false);\n };\n this.add_ref = function() {\n  var value = HEAP32[this.ptr >>> 2];\n  HEAP32[this.ptr >>> 2] = value + 1;\n };\n this.release_ref = function() {\n  var prev = HEAP32[this.ptr >>> 2];\n  HEAP32[this.ptr >>> 2] = prev - 1;\n  assert(prev > 0);\n  return prev === 1;\n };\n this.set_adjusted_ptr = function(adjustedPtr) {\n  HEAPU32[this.ptr + 16 >>> 2] = adjustedPtr;\n };\n this.get_adjusted_ptr = function() {\n  return HEAPU32[this.ptr + 16 >>> 2];\n };\n this.get_exception_ptr = function() {\n  var isPointer = ___cxa_is_pointer_type(this.get_type());\n  if (isPointer) {\n   return HEAPU32[this.excPtr >>> 2];\n  }\n  var adjusted = this.get_adjusted_ptr();\n  if (adjusted !== 0) return adjusted;\n  return this.excPtr;\n };\n}\n\nvar exceptionLast = 0;\n\nvar uncaughtExceptionCount = 0;\n\nfunction ___cxa_throw(ptr, type, destructor) {\n var info = new ExceptionInfo(ptr);\n info.init(type, destructor);\n exceptionLast = ptr;\n uncaughtExceptionCount++;\n throw ptr + \" - Exception catching is disabled, this exception cannot be caught. Compile with -sNO_DISABLE_EXCEPTION_CATCHING or -sEXCEPTION_CATCHING_ALLOWED=[..] to catch.\";\n}\n\nfunction __emscripten_date_now() {\n return Date.now();\n}\n\nfunction _abort() {\n abort(\"native code called abort()\");\n}\n\nfunction _emscripten_memcpy_big(dest, src, num) {\n HEAPU8.copyWithin(dest >>> 0, src >>> 0, src + num >>> 0);\n}\n\nfunction getHeapMax() {\n return 4294901760;\n}\n\nfunction emscripten_realloc_buffer(size) {\n try {\n  wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);\n  updateGlobalBufferAndViews(wasmMemory.buffer);\n  return 1;\n } catch (e) {\n  err(\"emscripten_realloc_buffer: Attempted to grow heap from \" + buffer.byteLength + \" bytes to \" + size + \" bytes, but got error: \" + e);\n }\n}\n\nfunction _emscripten_resize_heap(requestedSize) {\n var oldSize = HEAPU8.length;\n requestedSize = requestedSize >>> 0;\n assert(requestedSize > oldSize);\n var maxHeapSize = getHeapMax();\n if (requestedSize > maxHeapSize) {\n  err(\"Cannot enlarge memory, asked to go up to \" + requestedSize + \" bytes, but the limit is \" + maxHeapSize + \" bytes!\");\n  return false;\n }\n let alignUp = (x, multiple) => x + (multiple - x % multiple) % multiple;\n for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n  var overGrownHeapSize = oldSize * (1 + .2 / cutDown);\n  overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n  var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n  var replacement = emscripten_realloc_buffer(newSize);\n  if (replacement) {\n   return true;\n  }\n }\n err(\"Failed to grow the heap from \" + oldSize + \" bytes to \" + newSize + \" bytes, not enough memory!\");\n return false;\n}\n\nvar SYSCALLS = {\n varargs: undefined,\n get: function() {\n  assert(SYSCALLS.varargs != undefined);\n  SYSCALLS.varargs += 4;\n  var ret = HEAP32[SYSCALLS.varargs - 4 >>> 2];\n  return ret;\n },\n getStr: function(ptr) {\n  var ret = UTF8ToString(ptr);\n  return ret;\n }\n};\n\nfunction _proc_exit(code) {\n EXITSTATUS = code;\n if (!keepRuntimeAlive()) {\n  if (Module[\"onExit\"]) Module[\"onExit\"](code);\n  ABORT = true;\n }\n quit_(code, new ExitStatus(code));\n}\n\nfunction exitJS(status, implicit) {\n EXITSTATUS = status;\n checkUnflushedContent();\n if (keepRuntimeAlive() && !implicit) {\n  var msg = \"program exited (with status: \" + status + \"), but EXIT_RUNTIME is not set, so halting execution but not exiting the runtime or preventing further async execution (build with EXIT_RUNTIME=1, if you want a true shutdown)\";\n  readyPromiseReject(msg);\n  err(msg);\n }\n _proc_exit(status);\n}\n\nvar _exit = exitJS;\n\nvar printCharBuffers = [ null, [], [] ];\n\nfunction printChar(stream, curr) {\n var buffer = printCharBuffers[stream];\n assert(buffer);\n if (curr === 0 || curr === 10) {\n  (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));\n  buffer.length = 0;\n } else {\n  buffer.push(curr);\n }\n}\n\nfunction flush_NO_FILESYSTEM() {\n _fflush(0);\n if (printCharBuffers[1].length) printChar(1, 10);\n if (printCharBuffers[2].length) printChar(2, 10);\n}\n\nfunction _fd_write(fd, iov, iovcnt, pnum) {\n var num = 0;\n for (var i = 0; i < iovcnt; i++) {\n  var ptr = HEAPU32[iov >>> 2];\n  var len = HEAPU32[iov + 4 >>> 2];\n  iov += 8;\n  for (var j = 0; j < len; j++) {\n   printChar(fd, HEAPU8[ptr + j >>> 0]);\n  }\n  num += len;\n }\n HEAPU32[pnum >>> 2] = num;\n return 0;\n}\n\nfunction _setTempRet0(val) {\n setTempRet0(val);\n}\n\nfunction uleb128Encode(n, target) {\n assert(n < 16384);\n if (n < 128) {\n  target.push(n);\n } else {\n  target.push(n % 128 | 128, n >> 7);\n }\n}\n\nfunction sigToWasmTypes(sig) {\n var typeNames = {\n  \"i\": \"i32\",\n  \"j\": \"i64\",\n  \"f\": \"f32\",\n  \"d\": \"f64\",\n  \"p\": \"i32\"\n };\n var type = {\n  parameters: [],\n  results: sig[0] == \"v\" ? [] : [ typeNames[sig[0]] ]\n };\n for (var i = 1; i < sig.length; ++i) {\n  assert(sig[i] in typeNames, \"invalid signature char: \" + sig[i]);\n  type.parameters.push(typeNames[sig[i]]);\n }\n return type;\n}\n\nfunction convertJsFunctionToWasm(func, sig) {\n if (typeof WebAssembly.Function == \"function\") {\n  return new WebAssembly.Function(sigToWasmTypes(sig), func);\n }\n var typeSectionBody = [ 1, 96 ];\n var sigRet = sig.slice(0, 1);\n var sigParam = sig.slice(1);\n var typeCodes = {\n  \"i\": 127,\n  \"p\": 127,\n  \"j\": 126,\n  \"f\": 125,\n  \"d\": 124\n };\n uleb128Encode(sigParam.length, typeSectionBody);\n for (var i = 0; i < sigParam.length; ++i) {\n  assert(sigParam[i] in typeCodes, \"invalid signature char: \" + sigParam[i]);\n  typeSectionBody.push(typeCodes[sigParam[i]]);\n }\n if (sigRet == \"v\") {\n  typeSectionBody.push(0);\n } else {\n  typeSectionBody.push(1, typeCodes[sigRet]);\n }\n var bytes = [ 0, 97, 115, 109, 1, 0, 0, 0, 1 ];\n uleb128Encode(typeSectionBody.length, bytes);\n bytes.push.apply(bytes, typeSectionBody);\n bytes.push(2, 7, 1, 1, 101, 1, 102, 0, 0, 7, 5, 1, 1, 102, 0, 0);\n var module = new WebAssembly.Module(new Uint8Array(bytes));\n var instance = new WebAssembly.Instance(module, {\n  \"e\": {\n   \"f\": func\n  }\n });\n var wrappedFunc = instance.exports[\"f\"];\n return wrappedFunc;\n}\n\nvar wasmTableMirror = [];\n\nfunction getWasmTableEntry(funcPtr) {\n var func = wasmTableMirror[funcPtr];\n if (!func) {\n  if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;\n  wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\n }\n assert(wasmTable.get(funcPtr) == func, \"JavaScript-side Wasm function table mirror is out of date!\");\n return func;\n}\n\nfunction updateTableMap(offset, count) {\n if (functionsInTableMap) {\n  for (var i = offset; i < offset + count; i++) {\n   var item = getWasmTableEntry(i);\n   if (item) {\n    functionsInTableMap.set(item, i);\n   }\n  }\n }\n}\n\nvar functionsInTableMap = undefined;\n\nvar freeTableIndexes = [];\n\nfunction getEmptyTableSlot() {\n if (freeTableIndexes.length) {\n  return freeTableIndexes.pop();\n }\n try {\n  wasmTable.grow(1);\n } catch (err) {\n  if (!(err instanceof RangeError)) {\n   throw err;\n  }\n  throw \"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.\";\n }\n return wasmTable.length - 1;\n}\n\nfunction setWasmTableEntry(idx, func) {\n wasmTable.set(idx, func);\n wasmTableMirror[idx] = wasmTable.get(idx);\n}\n\nfunction addFunction(func, sig) {\n assert(typeof func != \"undefined\");\n if (!functionsInTableMap) {\n  functionsInTableMap = new WeakMap();\n  updateTableMap(0, wasmTable.length);\n }\n if (functionsInTableMap.has(func)) {\n  return functionsInTableMap.get(func);\n }\n var ret = getEmptyTableSlot();\n try {\n  setWasmTableEntry(ret, func);\n } catch (err) {\n  if (!(err instanceof TypeError)) {\n   throw err;\n  }\n  assert(typeof sig != \"undefined\", \"Missing signature argument to addFunction: \" + func);\n  var wrapped = convertJsFunctionToWasm(func, sig);\n  setWasmTableEntry(ret, wrapped);\n }\n functionsInTableMap.set(func, ret);\n return ret;\n}\n\nfunction removeFunction(index) {\n functionsInTableMap.delete(getWasmTableEntry(index));\n freeTableIndexes.push(index);\n}\n\nvar ALLOC_NORMAL = 0;\n\nvar ALLOC_STACK = 1;\n\nfunction allocate(slab, allocator) {\n var ret;\n assert(typeof allocator == \"number\", \"allocate no longer takes a type argument\");\n assert(typeof slab != \"number\", \"allocate no longer takes a number as arg0\");\n if (allocator == ALLOC_STACK) {\n  ret = stackAlloc(slab.length);\n } else {\n  ret = _malloc(slab.length);\n }\n if (!slab.subarray && !slab.slice) {\n  slab = new Uint8Array(slab);\n }\n HEAPU8.set(slab, ret >>> 0);\n return ret;\n}\n\nfunction AsciiToString(ptr) {\n ptr >>>= 0;\n var str = \"\";\n while (1) {\n  var ch = HEAPU8[ptr++ >>> 0];\n  if (!ch) return str;\n  str += String.fromCharCode(ch);\n }\n}\n\nfunction writeAsciiToMemory(str, buffer, dontAddNull) {\n for (var i = 0; i < str.length; ++i) {\n  assert(str.charCodeAt(i) === (str.charCodeAt(i) & 255));\n  HEAP8[buffer++ >>> 0] = str.charCodeAt(i);\n }\n if (!dontAddNull) HEAP8[buffer >>> 0] = 0;\n}\n\nfunction stringToAscii(str, outPtr) {\n return writeAsciiToMemory(str, outPtr, false);\n}\n\nvar UTF16Decoder = typeof TextDecoder != \"undefined\" ? new TextDecoder(\"utf-16le\") : undefined;\n\nfunction UTF16ToString(ptr, maxBytesToRead) {\n assert(ptr % 2 == 0, \"Pointer passed to UTF16ToString must be aligned to two bytes!\");\n var endPtr = ptr;\n var idx = endPtr >> 1;\n var maxIdx = idx + maxBytesToRead / 2;\n while (!(idx >= maxIdx) && HEAPU16[idx >>> 0]) ++idx;\n endPtr = idx << 1;\n if (endPtr - ptr > 32 && UTF16Decoder) {\n  return UTF16Decoder.decode(HEAPU8.subarray(ptr >>> 0, endPtr >>> 0));\n } else {\n  var str = \"\";\n  for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\n   var codeUnit = HEAP16[ptr + i * 2 >>> 1];\n   if (codeUnit == 0) break;\n   str += String.fromCharCode(codeUnit);\n  }\n  return str;\n }\n}\n\nfunction stringToUTF16(str, outPtr, maxBytesToWrite) {\n assert(outPtr % 2 == 0, \"Pointer passed to stringToUTF16 must be aligned to two bytes!\");\n assert(typeof maxBytesToWrite == \"number\", \"stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!\");\n if (maxBytesToWrite === undefined) {\n  maxBytesToWrite = 2147483647;\n }\n if (maxBytesToWrite < 2) return 0;\n maxBytesToWrite -= 2;\n var startPtr = outPtr;\n var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;\n for (var i = 0; i < numCharsToWrite; ++i) {\n  var codeUnit = str.charCodeAt(i);\n  HEAP16[outPtr >>> 1] = codeUnit;\n  outPtr += 2;\n }\n HEAP16[outPtr >>> 1] = 0;\n return outPtr - startPtr;\n}\n\nfunction lengthBytesUTF16(str) {\n return str.length * 2;\n}\n\nfunction UTF32ToString(ptr, maxBytesToRead) {\n assert(ptr % 4 == 0, \"Pointer passed to UTF32ToString must be aligned to four bytes!\");\n var i = 0;\n var str = \"\";\n while (!(i >= maxBytesToRead / 4)) {\n  var utf32 = HEAP32[ptr + i * 4 >>> 2];\n  if (utf32 == 0) break;\n  ++i;\n  if (utf32 >= 65536) {\n   var ch = utf32 - 65536;\n   str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n  } else {\n   str += String.fromCharCode(utf32);\n  }\n }\n return str;\n}\n\nfunction stringToUTF32(str, outPtr, maxBytesToWrite) {\n outPtr >>>= 0;\n assert(outPtr % 4 == 0, \"Pointer passed to stringToUTF32 must be aligned to four bytes!\");\n assert(typeof maxBytesToWrite == \"number\", \"stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!\");\n if (maxBytesToWrite === undefined) {\n  maxBytesToWrite = 2147483647;\n }\n if (maxBytesToWrite < 4) return 0;\n var startPtr = outPtr;\n var endPtr = startPtr + maxBytesToWrite - 4;\n for (var i = 0; i < str.length; ++i) {\n  var codeUnit = str.charCodeAt(i);\n  if (codeUnit >= 55296 && codeUnit <= 57343) {\n   var trailSurrogate = str.charCodeAt(++i);\n   codeUnit = 65536 + ((codeUnit & 1023) << 10) | trailSurrogate & 1023;\n  }\n  HEAP32[outPtr >>> 2] = codeUnit;\n  outPtr += 4;\n  if (outPtr + 4 > endPtr) break;\n }\n HEAP32[outPtr >>> 2] = 0;\n return outPtr - startPtr;\n}\n\nfunction lengthBytesUTF32(str) {\n var len = 0;\n for (var i = 0; i < str.length; ++i) {\n  var codeUnit = str.charCodeAt(i);\n  if (codeUnit >= 55296 && codeUnit <= 57343) ++i;\n  len += 4;\n }\n return len;\n}\n\nfunction allocateUTF8(str) {\n var size = lengthBytesUTF8(str) + 1;\n var ret = _malloc(size);\n if (ret) stringToUTF8Array(str, HEAP8, ret, size);\n return ret;\n}\n\nfunction allocateUTF8OnStack(str) {\n var size = lengthBytesUTF8(str) + 1;\n var ret = stackAlloc(size);\n stringToUTF8Array(str, HEAP8, ret, size);\n return ret;\n}\n\nfunction writeStringToMemory(string, buffer, dontAddNull) {\n warnOnce(\"writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!\");\n var lastChar, end;\n if (dontAddNull) {\n  end = buffer + lengthBytesUTF8(string);\n  lastChar = HEAP8[end >>> 0];\n }\n stringToUTF8(string, buffer, Infinity);\n if (dontAddNull) HEAP8[end >>> 0] = lastChar;\n}\n\nfunction intArrayFromString(stringy, dontAddNull, length) {\n var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n var u8array = new Array(len);\n var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n if (dontAddNull) u8array.length = numBytesWritten;\n return u8array;\n}\n\nfunction intArrayToString(array) {\n var ret = [];\n for (var i = 0; i < array.length; i++) {\n  var chr = array[i];\n  if (chr > 255) {\n   if (ASSERTIONS) {\n    assert(false, \"Character code \" + chr + \" (\" + String.fromCharCode(chr) + \")  at offset \" + i + \" not in 0x00-0xFF.\");\n   }\n   chr &= 255;\n  }\n  ret.push(String.fromCharCode(chr));\n }\n return ret.join(\"\");\n}\n\nfunction getCFunc(ident) {\n var func = Module[\"_\" + ident];\n assert(func, \"Cannot call unknown function \" + ident + \", make sure it is exported\");\n return func;\n}\n\nfunction ccall(ident, returnType, argTypes, args, opts) {\n var toC = {\n  \"string\": str => {\n   var ret = 0;\n   if (str !== null && str !== undefined && str !== 0) {\n    var len = (str.length << 2) + 1;\n    ret = stackAlloc(len);\n    stringToUTF8(str, ret, len);\n   }\n   return ret;\n  },\n  \"array\": arr => {\n   var ret = stackAlloc(arr.length);\n   writeArrayToMemory(arr, ret);\n   return ret;\n  }\n };\n function convertReturnValue(ret) {\n  if (returnType === \"string\") {\n   return UTF8ToString(ret);\n  }\n  if (returnType === \"boolean\") return Boolean(ret);\n  return ret;\n }\n var func = getCFunc(ident);\n var cArgs = [];\n var stack = 0;\n assert(returnType !== \"array\", 'Return type should not be \"array\".');\n if (args) {\n  for (var i = 0; i < args.length; i++) {\n   var converter = toC[argTypes[i]];\n   if (converter) {\n    if (stack === 0) stack = stackSave();\n    cArgs[i] = converter(args[i]);\n   } else {\n    cArgs[i] = args[i];\n   }\n  }\n }\n var ret = func.apply(null, cArgs);\n function onDone(ret) {\n  if (stack !== 0) stackRestore(stack);\n  return convertReturnValue(ret);\n }\n ret = onDone(ret);\n return ret;\n}\n\nfunction cwrap(ident, returnType, argTypes, opts) {\n return function() {\n  return ccall(ident, returnType, argTypes, arguments, opts);\n };\n}\n\nvar ASSERTIONS = true;\n\nfunction checkIncomingModuleAPI() {\n ignoredModuleProp(\"fetchSettings\");\n}\n\nvar asmLibraryArg = {\n \"__cxa_allocate_exception\": ___cxa_allocate_exception,\n \"__cxa_throw\": ___cxa_throw,\n \"_emscripten_date_now\": __emscripten_date_now,\n \"abort\": _abort,\n \"emscripten_memcpy_big\": _emscripten_memcpy_big,\n \"emscripten_resize_heap\": _emscripten_resize_heap,\n \"exit\": _exit,\n \"fd_write\": _fd_write,\n \"setTempRet0\": _setTempRet0\n};\n\nvar asm = createWasm();\n\nvar ___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = createExportWrapper(\"__wasm_call_ctors\");\n\nvar _version = Module[\"_version\"] = createExportWrapper(\"version\");\n\nvar _malloc = Module[\"_malloc\"] = createExportWrapper(\"malloc\");\n\nvar ___errno_location = Module[\"___errno_location\"] = createExportWrapper(\"__errno_location\");\n\nvar _fflush = Module[\"_fflush\"] = createExportWrapper(\"fflush\");\n\nvar _emscripten_stack_init = Module[\"_emscripten_stack_init\"] = function() {\n return (_emscripten_stack_init = Module[\"_emscripten_stack_init\"] = Module[\"asm\"][\"emscripten_stack_init\"]).apply(null, arguments);\n};\n\nvar _emscripten_stack_get_free = Module[\"_emscripten_stack_get_free\"] = function() {\n return (_emscripten_stack_get_free = Module[\"_emscripten_stack_get_free\"] = Module[\"asm\"][\"emscripten_stack_get_free\"]).apply(null, arguments);\n};\n\nvar _emscripten_stack_get_base = Module[\"_emscripten_stack_get_base\"] = function() {\n return (_emscripten_stack_get_base = Module[\"_emscripten_stack_get_base\"] = Module[\"asm\"][\"emscripten_stack_get_base\"]).apply(null, arguments);\n};\n\nvar _emscripten_stack_get_end = Module[\"_emscripten_stack_get_end\"] = function() {\n return (_emscripten_stack_get_end = Module[\"_emscripten_stack_get_end\"] = Module[\"asm\"][\"emscripten_stack_get_end\"]).apply(null, arguments);\n};\n\nvar stackSave = Module[\"stackSave\"] = createExportWrapper(\"stackSave\");\n\nvar stackRestore = Module[\"stackRestore\"] = createExportWrapper(\"stackRestore\");\n\nvar stackAlloc = Module[\"stackAlloc\"] = createExportWrapper(\"stackAlloc\");\n\nvar ___cxa_is_pointer_type = Module[\"___cxa_is_pointer_type\"] = createExportWrapper(\"__cxa_is_pointer_type\");\n\nvar dynCall_jiji = Module[\"dynCall_jiji\"] = createExportWrapper(\"dynCall_jiji\");\n\nModule[\"cwrap\"] = cwrap;\n\nvar unexportedRuntimeSymbols = [ \"run\", \"UTF8ArrayToString\", \"UTF8ToString\", \"stringToUTF8Array\", \"stringToUTF8\", \"lengthBytesUTF8\", \"addOnPreRun\", \"addOnInit\", \"addOnPreMain\", \"addOnExit\", \"addOnPostRun\", \"addRunDependency\", \"removeRunDependency\", \"FS_createFolder\", \"FS_createPath\", \"FS_createDataFile\", \"FS_createPreloadedFile\", \"FS_createLazyFile\", \"FS_createLink\", \"FS_createDevice\", \"FS_unlink\", \"getLEB\", \"getFunctionTables\", \"alignFunctionTables\", \"registerFunctions\", \"prettyPrint\", \"getCompilerSetting\", \"print\", \"printErr\", \"getTempRet0\", \"setTempRet0\", \"callMain\", \"abort\", \"keepRuntimeAlive\", \"wasmMemory\", \"stackSave\", \"stackRestore\", \"stackAlloc\", \"writeStackCookie\", \"checkStackCookie\", \"ptrToString\", \"zeroMemory\", \"stringToNewUTF8\", \"exitJS\", \"getHeapMax\", \"emscripten_realloc_buffer\", \"ENV\", \"ERRNO_CODES\", \"ERRNO_MESSAGES\", \"setErrNo\", \"inetPton4\", \"inetNtop4\", \"inetPton6\", \"inetNtop6\", \"readSockaddr\", \"writeSockaddr\", \"DNS\", \"getHostByName\", \"Protocols\", \"Sockets\", \"getRandomDevice\", \"warnOnce\", \"traverseStack\", \"UNWIND_CACHE\", \"convertPCtoSourceLocation\", \"readAsmConstArgsArray\", \"readAsmConstArgs\", \"mainThreadEM_ASM\", \"jstoi_q\", \"jstoi_s\", \"getExecutableName\", \"listenOnce\", \"autoResumeAudioContext\", \"dynCallLegacy\", \"getDynCaller\", \"dynCall\", \"handleException\", \"runtimeKeepalivePush\", \"runtimeKeepalivePop\", \"callUserCallback\", \"maybeExit\", \"safeSetTimeout\", \"asmjsMangle\", \"asyncLoad\", \"alignMemory\", \"mmapAlloc\", \"writeI53ToI64\", \"writeI53ToI64Clamped\", \"writeI53ToI64Signaling\", \"writeI53ToU64Clamped\", \"writeI53ToU64Signaling\", \"readI53FromI64\", \"readI53FromU64\", \"convertI32PairToI53\", \"convertI32PairToI53Checked\", \"convertU32PairToI53\", \"getCFunc\", \"ccall\", \"uleb128Encode\", \"sigToWasmTypes\", \"convertJsFunctionToWasm\", \"freeTableIndexes\", \"functionsInTableMap\", \"getEmptyTableSlot\", \"updateTableMap\", \"addFunction\", \"removeFunction\", \"reallyNegative\", \"unSign\", \"strLen\", \"reSign\", \"formatString\", \"setValue\", \"getValue\", \"PATH\", \"PATH_FS\", \"intArrayFromString\", \"intArrayToString\", \"AsciiToString\", \"stringToAscii\", \"UTF16Decoder\", \"UTF16ToString\", \"stringToUTF16\", \"lengthBytesUTF16\", \"UTF32ToString\", \"stringToUTF32\", \"lengthBytesUTF32\", \"allocateUTF8\", \"allocateUTF8OnStack\", \"writeStringToMemory\", \"writeArrayToMemory\", \"writeAsciiToMemory\", \"SYSCALLS\", \"getSocketFromFD\", \"getSocketAddress\", \"JSEvents\", \"registerKeyEventCallback\", \"specialHTMLTargets\", \"maybeCStringToJsString\", \"findEventTarget\", \"findCanvasEventTarget\", \"getBoundingClientRect\", \"fillMouseEventData\", \"registerMouseEventCallback\", \"registerWheelEventCallback\", \"registerUiEventCallback\", \"registerFocusEventCallback\", \"fillDeviceOrientationEventData\", \"registerDeviceOrientationEventCallback\", \"fillDeviceMotionEventData\", \"registerDeviceMotionEventCallback\", \"screenOrientation\", \"fillOrientationChangeEventData\", \"registerOrientationChangeEventCallback\", \"fillFullscreenChangeEventData\", \"registerFullscreenChangeEventCallback\", \"JSEvents_requestFullscreen\", \"JSEvents_resizeCanvasForFullscreen\", \"registerRestoreOldStyle\", \"hideEverythingExceptGivenElement\", \"restoreHiddenElements\", \"setLetterbox\", \"currentFullscreenStrategy\", \"restoreOldWindowedStyle\", \"softFullscreenResizeWebGLRenderTarget\", \"doRequestFullscreen\", \"fillPointerlockChangeEventData\", \"registerPointerlockChangeEventCallback\", \"registerPointerlockErrorEventCallback\", \"requestPointerLock\", \"fillVisibilityChangeEventData\", \"registerVisibilityChangeEventCallback\", \"registerTouchEventCallback\", \"fillGamepadEventData\", \"registerGamepadEventCallback\", \"registerBeforeUnloadEventCallback\", \"fillBatteryEventData\", \"battery\", \"registerBatteryEventCallback\", \"setCanvasElementSize\", \"getCanvasElementSize\", \"demangle\", \"demangleAll\", \"jsStackTrace\", \"stackTrace\", \"ExitStatus\", \"getEnvStrings\", \"checkWasiClock\", \"flush_NO_FILESYSTEM\", \"dlopenMissingError\", \"setImmediateWrapped\", \"clearImmediateWrapped\", \"polyfillSetImmediate\", \"uncaughtExceptionCount\", \"exceptionLast\", \"exceptionCaught\", \"ExceptionInfo\", \"exception_addRef\", \"exception_decRef\", \"Browser\", \"setMainLoop\", \"wget\", \"FS\", \"MEMFS\", \"TTY\", \"PIPEFS\", \"SOCKFS\", \"_setNetworkCallback\", \"tempFixedLengthArray\", \"miniTempWebGLFloatBuffers\", \"heapObjectForWebGLType\", \"heapAccessShiftForWebGLHeap\", \"GL\", \"emscriptenWebGLGet\", \"computeUnpackAlignedImageSize\", \"emscriptenWebGLGetTexPixelData\", \"emscriptenWebGLGetUniform\", \"webglGetUniformLocation\", \"webglPrepareUniformLocationsBeforeFirstUse\", \"webglGetLeftBracePos\", \"emscriptenWebGLGetVertexAttrib\", \"writeGLArray\", \"AL\", \"SDL_unicode\", \"SDL_ttfContext\", \"SDL_audio\", \"SDL\", \"SDL_gfx\", \"GLUT\", \"EGL\", \"GLFW_Window\", \"GLFW\", \"GLEW\", \"IDBStore\", \"runAndAbortIfError\", \"ALLOC_NORMAL\", \"ALLOC_STACK\", \"allocate\" ];\n\nunexportedRuntimeSymbols.forEach(unexportedRuntimeSymbol);\n\nvar missingLibrarySymbols = [ \"ptrToString\", \"zeroMemory\", \"stringToNewUTF8\", \"setErrNo\", \"inetPton4\", \"inetNtop4\", \"inetPton6\", \"inetNtop6\", \"readSockaddr\", \"writeSockaddr\", \"getHostByName\", \"getRandomDevice\", \"traverseStack\", \"convertPCtoSourceLocation\", \"readAsmConstArgs\", \"mainThreadEM_ASM\", \"jstoi_q\", \"jstoi_s\", \"getExecutableName\", \"listenOnce\", \"autoResumeAudioContext\", \"dynCallLegacy\", \"getDynCaller\", \"dynCall\", \"runtimeKeepalivePush\", \"runtimeKeepalivePop\", \"callUserCallback\", \"maybeExit\", \"safeSetTimeout\", \"asmjsMangle\", \"asyncLoad\", \"alignMemory\", \"mmapAlloc\", \"writeI53ToI64\", \"writeI53ToI64Clamped\", \"writeI53ToI64Signaling\", \"writeI53ToU64Clamped\", \"writeI53ToU64Signaling\", \"readI53FromI64\", \"readI53FromU64\", \"convertI32PairToI53\", \"convertI32PairToI53Checked\", \"convertU32PairToI53\", \"reallyNegative\", \"unSign\", \"strLen\", \"reSign\", \"formatString\", \"getSocketFromFD\", \"getSocketAddress\", \"registerKeyEventCallback\", \"maybeCStringToJsString\", \"findEventTarget\", \"findCanvasEventTarget\", \"getBoundingClientRect\", \"fillMouseEventData\", \"registerMouseEventCallback\", \"registerWheelEventCallback\", \"registerUiEventCallback\", \"registerFocusEventCallback\", \"fillDeviceOrientationEventData\", \"registerDeviceOrientationEventCallback\", \"fillDeviceMotionEventData\", \"registerDeviceMotionEventCallback\", \"screenOrientation\", \"fillOrientationChangeEventData\", \"registerOrientationChangeEventCallback\", \"fillFullscreenChangeEventData\", \"registerFullscreenChangeEventCallback\", \"JSEvents_requestFullscreen\", \"JSEvents_resizeCanvasForFullscreen\", \"registerRestoreOldStyle\", \"hideEverythingExceptGivenElement\", \"restoreHiddenElements\", \"setLetterbox\", \"softFullscreenResizeWebGLRenderTarget\", \"doRequestFullscreen\", \"fillPointerlockChangeEventData\", \"registerPointerlockChangeEventCallback\", \"registerPointerlockErrorEventCallback\", \"requestPointerLock\", \"fillVisibilityChangeEventData\", \"registerVisibilityChangeEventCallback\", \"registerTouchEventCallback\", \"fillGamepadEventData\", \"registerGamepadEventCallback\", \"registerBeforeUnloadEventCallback\", \"fillBatteryEventData\", \"battery\", \"registerBatteryEventCallback\", \"setCanvasElementSize\", \"getCanvasElementSize\", \"getEnvStrings\", \"checkWasiClock\", \"setImmediateWrapped\", \"clearImmediateWrapped\", \"polyfillSetImmediate\", \"exception_addRef\", \"exception_decRef\", \"setMainLoop\", \"_setNetworkCallback\", \"heapObjectForWebGLType\", \"heapAccessShiftForWebGLHeap\", \"emscriptenWebGLGet\", \"computeUnpackAlignedImageSize\", \"emscriptenWebGLGetTexPixelData\", \"emscriptenWebGLGetUniform\", \"webglGetUniformLocation\", \"webglPrepareUniformLocationsBeforeFirstUse\", \"webglGetLeftBracePos\", \"emscriptenWebGLGetVertexAttrib\", \"writeGLArray\", \"SDL_unicode\", \"SDL_ttfContext\", \"SDL_audio\", \"GLFW_Window\", \"runAndAbortIfError\" ];\n\nmissingLibrarySymbols.forEach(missingLibrarySymbol);\n\nvar calledRun;\n\ndependenciesFulfilled = function runCaller() {\n if (!calledRun) run();\n if (!calledRun) dependenciesFulfilled = runCaller;\n};\n\nfunction stackCheckInit() {\n _emscripten_stack_init();\n writeStackCookie();\n}\n\nfunction run(args) {\n args = args || arguments_;\n if (runDependencies > 0) {\n  return;\n }\n stackCheckInit();\n preRun();\n if (runDependencies > 0) {\n  return;\n }\n function doRun() {\n  if (calledRun) return;\n  calledRun = true;\n  Module[\"calledRun\"] = true;\n  if (ABORT) return;\n  initRuntime();\n  readyPromiseResolve(Module);\n  if (Module[\"onRuntimeInitialized\"]) Module[\"onRuntimeInitialized\"]();\n  assert(!Module[\"_main\"], 'compiled without a main, but one is present. if you added it from JS, use Module[\"onRuntimeInitialized\"]');\n  postRun();\n }\n if (Module[\"setStatus\"]) {\n  Module[\"setStatus\"](\"Running...\");\n  setTimeout(function() {\n   setTimeout(function() {\n    Module[\"setStatus\"](\"\");\n   }, 1);\n   doRun();\n  }, 1);\n } else {\n  doRun();\n }\n checkStackCookie();\n}\n\nfunction checkUnflushedContent() {\n var oldOut = out;\n var oldErr = err;\n var has = false;\n out = err = x => {\n  has = true;\n };\n try {\n  flush_NO_FILESYSTEM();\n } catch (e) {}\n out = oldOut;\n err = oldErr;\n if (has) {\n  warnOnce(\"stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the FAQ), or make sure to emit a newline when you printf etc.\");\n  warnOnce(\"(this may also be due to not including full filesystem support - try building with -sFORCE_FILESYSTEM)\");\n }\n}\n\nif (Module[\"preInit\"]) {\n if (typeof Module[\"preInit\"] == \"function\") Module[\"preInit\"] = [ Module[\"preInit\"] ];\n while (Module[\"preInit\"].length > 0) {\n  Module[\"preInit\"].pop()();\n }\n}\n\nrun();\n\n\n  return Module.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = Module;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return Module; });\nelse if (typeof exports === 'object')\n  exports[\"Module\"] = Module;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\n// @ts-ignore\nimport TSNE from \"../tsne.js\";\n\n\nsetTimeout(() => {\n  TSNE().then((module: EmscriptenModule) => {\n    const N = 100;\n    const D = 1;\n\n\n    let data: number[] = [];\n    for (let i = 0; i < N; i++) {\n      data.push(Math.random() * 100);\n    }\n   \n    // const memory = module.asm.memory;\n    \n    const X = new Float64Array(\n      module.HEAP8.buffer,\n      module._malloc(N * 8 * D),\n      N * D\n    );\n    X.set(data);\n\n    const Y = new Float64Array(\n      module.HEAP8.buffer,\n      module._malloc(N * 8 * 2),\n      N * 2\n    );\n\n    Y.set(data);\n\n    // @ts-ignore\n    var version = module.cwrap(\"version\", \"number\", []);\n    version(X.byteOffset, N, Y.byteOffset, D);\n  });\n}, 2000);\n\nself.onmessage = ({ data: { question } }) => {\n  self.postMessage({\n    answer: 42,\n  });\n};\n"],"names":[],"sourceRoot":""}