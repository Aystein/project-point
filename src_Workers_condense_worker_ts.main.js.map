{"version":3,"file":"src_Workers_condense_worker_ts.main.js","sources":["./src/Layouts/ForceUtil.ts","./src/Layouts/Globals.ts","./src/Workers/condense.worker.ts"],"sourcesContent":["import { ScaleLinear, scaleLinear } from 'd3-scale';\nimport { IRectangle } from '../WebGL/Math/Rectangle';\nimport { Simulation, SimulationLinkDatum } from 'd3-force';\nimport { POINT_RADIUS } from './Globals';\n\nexport function scaleToWorld(\n  area: IRectangle\n): [\n  ScaleLinear<number, number>,\n  ScaleLinear<number, number>,\n] {\n  const worldX = scaleLinear()\n    .domain([0, 1])\n    .range([area.x, area.x + area.width]);\n\n  const worldY = scaleLinear()\n    .domain([0, 1])\n    .range([area.y, area.y + area.height]);\n\n  return [worldX, worldY];\n}\n\nexport function forceNormalizationNew(\n  area: IRectangle\n): [\n  ScaleLinear<number, number>,\n  ScaleLinear<number, number>,\n  ScaleLinear<number, number>,\n  ScaleLinear<number, number>,\n  number\n] {\n  const factor = 500 / area.width;\n\n  const scaleX = scaleLinear()\n    .domain([0, 1])\n    .range([0, area.width * factor]);\n\n  const scaleY = scaleLinear()\n    .domain([0, 1])\n    .range([0, area.height * factor]);\n\n  const worldX = scaleLinear()\n    .domain([0, 1])\n    .range([area.x + area.width * 0.01, area.x + area.width * 0.99]);\n\n  const worldY = scaleLinear()\n    .domain([0, 1])\n    .range([area.y + area.height * 0.01, area.y + area.height * 0.99]);\n\n  return [scaleX, scaleY, worldX, worldY, POINT_RADIUS * factor];\n}\n\nexport function forceNormalization(\n  area: IRectangle\n): [ScaleLinear<number, number>, ScaleLinear<number, number>, number] {\n  const factor = 500 / area.width;\n\n  const scaleX = scaleLinear()\n    .domain([area.x, area.x + area.width])\n    .range([0, area.width * factor]);\n\n  const scaleY = scaleLinear()\n    .domain([area.y, area.y + area.height])\n    .range([0, area.height * factor]);\n\n  return [scaleX, scaleY, POINT_RADIUS * factor];\n}\n\nexport function convergeLayout<A, B extends SimulationLinkDatum<A>>(\n  simulation: Simulation<A, B>\n) {\n  for (\n    var i = 0,\n      n = Math.ceil(\n        Math.log(simulation.alphaMin()) / Math.log(1 - simulation.alphaDecay())\n      );\n    i < n;\n    ++i\n  ) {\n    // console.log(\"TICK\")\n    simulation.tick();\n  }\n}\n","export const POINT_RADIUS = 0.012;\n","/* eslint-disable no-restricted-globals */\nimport { IRectangle } from '../WebGL/Math/Rectangle';\nimport { forceNormalizationNew, scaleToWorld } from '../Layouts/ForceUtil';\nimport { LabelContainer } from '../Store/interfaces';\nimport { VectorLike } from '../Interfaces';\n\ninterface Props {\n  data: {\n    n: number;\n    area: IRectangle;\n    axis: 'x' | 'y' | 'xy';\n    type: string;\n    X: VectorLike[];\n  };\n}\n\nself.onmessage = ({\n  data: { n, area, type, axis, X },\n}: Props) => {\n  if (type !== 'init') {\n    return;\n  }\n\n  //const [worldX, worldY] = scaleToWorld(area);\n  const [a, b, worldX, worldY, r] = forceNormalizationNew(area);\n\n  const labels: LabelContainer[] = [{\n    discriminator: 'positionedlabels',\n    type: axis === 'x' ? 'x' : 'y',\n    labels: [],\n  }];\n\n  self.postMessage({\n    type: 'finish',\n    Y: X.map((node, i) => ({ x: axis !== 'y' ? worldX(0.5) : X[i].x, y: axis !== 'x' ? worldY(0.5) : X[i].y })),\n    labels,\n  });\n};"],"names":["scaleToWorld","area","worldX","scaleLinear","domain","range","x","width","worldY","y","height","forceNormalizationNew","factor","scaleX","scaleY","POINT_RADIUS","self","onmessage","data","n","type","axis","X","a","b","r","postMessage","Y","map","node","i","labels","discriminator"],"mappings":"4LAKO,SAASA,EACdC,CAAgB,EAKhB,IAAMC,EAAS,KAAAC,WAAA,IACZC,MAAM,CAAC,CAAC,EAAG,EAAE,EACbC,KAAK,CAAC,CAACJ,EAAKK,CAAC,CAAEL,EAAKK,CAAC,CAAGL,EAAKM,KAAK,CAAC,EAEhCC,EAAS,KAAAL,WAAA,IACZC,MAAM,CAAC,CAAC,EAAG,EAAE,EACbC,KAAK,CAAC,CAACJ,EAAKQ,CAAC,CAAER,EAAKQ,CAAC,CAAGR,EAAKS,MAAM,CAAC,EAEvC,MAAO,CAACR,EAAQM,EAAO,AACzB,CAEO,SAASG,EACdV,CAAgB,EAQhB,IAAMW,EAAS,IAAMX,EAAKM,KAAK,CAEzBM,EAAS,KAAAV,WAAA,IACZC,MAAM,CAAC,CAAC,EAAG,EAAE,EACbC,KAAK,CAAC,CAAC,EAAGJ,EAAKM,KAAK,CAAGK,EAAO,EAE3BE,EAAS,KAAAX,WAAA,IACZC,MAAM,CAAC,CAAC,EAAG,EAAE,EACbC,KAAK,CAAC,CAAC,EAAGJ,EAAKS,MAAM,CAAGE,EAAO,EAE5BV,EAAS,KAAAC,WAAA,IACZC,MAAM,CAAC,CAAC,EAAG,EAAE,EACbC,KAAK,CAAC,CAACJ,EAAKK,CAAC,CAAGL,AAAa,IAAbA,EAAKM,KAAK,CAASN,EAAKK,CAAC,CAAGL,AAAa,IAAbA,EAAKM,KAAK,CAAQ,EAE3DC,EAAS,KAAAL,WAAA,IACZC,MAAM,CAAC,CAAC,EAAG,EAAE,EACbC,KAAK,CAAC,CAACJ,EAAKQ,CAAC,CAAGR,AAAc,IAAdA,EAAKS,MAAM,CAAST,EAAKQ,CAAC,CAAGR,AAAc,IAAdA,EAAKS,MAAM,CAAQ,EAEnE,MAAO,CAACG,EAAQC,EAAQZ,EAAQM,EAAQ,EAAAO,YAAY,CAAGH,EAAO,AAChE,C,uFClDO,IAAMG,EAAe,I,8DCgB5BC,CAAAA,KAAKC,SAAS,CAAG,CAAC,CAChBC,KAAM,CAAEC,EAAAA,CAAC,CAAElB,KAAAA,CAAI,CAAEmB,KAAAA,CAAI,CAAEC,KAAAA,CAAI,CAAEC,EAAAA,CAAC,CAAE,CAC1B,IACN,GAAIF,AAAS,SAATA,EACF,OAIF,GAAM,CAACG,EAAGC,EAAGtB,EAAQM,EAAQiB,EAAE,CAAG,KAAAd,qBAAA,EAAsBV,GAQxDe,KAAKU,WAAW,CAAC,CACfN,KAAM,SACNO,EAAGL,EAAEM,GAAG,CAAC,CAACC,EAAMC,IAAO,EAAExB,EAAGe,AAAS,MAATA,EAAenB,EAAO,IAAOoB,CAAC,CAACQ,EAAE,CAACxB,CAAC,CAAEG,EAAGY,AAAS,MAATA,EAAeb,EAAO,IAAOc,CAAC,CAACQ,EAAE,CAACrB,CAAC,AAAC,IACxGsB,OAT+B,CAAC,CAChCC,cAAe,mBACfZ,KAAMC,AAAS,MAATA,EAAe,IAAM,IAC3BU,OAAQ,EAAE,AACZ,EAAE,AAMF,EACF,C"}