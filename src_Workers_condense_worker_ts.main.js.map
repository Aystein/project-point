{"version":3,"file":"src_Workers_condense_worker_ts.main.js","sources":["./src/Layouts/ForceUtil.ts","./src/Layouts/Globals.ts","./src/Workers/condense.worker.ts"],"sourcesContent":["import { ScaleLinear, scaleLinear } from 'd3-scale';\r\nimport { IRectangle } from '../WebGL/Math/Rectangle';\r\nimport { Simulation, SimulationLinkDatum } from 'd3-force';\r\nimport { POINT_RADIUS } from './Globals';\r\n\r\nexport function scaleToWorld(\r\n  area: IRectangle\r\n): [\r\n  ScaleLinear<number, number>,\r\n  ScaleLinear<number, number>,\r\n] {\r\n  const worldX = scaleLinear()\r\n    .domain([0, 1])\r\n    .range([area.x, area.x + area.width]);\r\n\r\n  const worldY = scaleLinear()\r\n    .domain([0, 1])\r\n    .range([area.y, area.y + area.height]);\r\n\r\n  return [worldX, worldY];\r\n}\r\n\r\nexport function forceNormalizationNew(\r\n  area: IRectangle\r\n): [\r\n  ScaleLinear<number, number>,\r\n  ScaleLinear<number, number>,\r\n  ScaleLinear<number, number>,\r\n  ScaleLinear<number, number>,\r\n  number\r\n] {\r\n  const factor = 500 / area.width;\r\n\r\n  const scaleX = scaleLinear()\r\n    .domain([0, 1])\r\n    .range([0, area.width * factor]);\r\n\r\n  const scaleY = scaleLinear()\r\n    .domain([0, 1])\r\n    .range([0, area.height * factor]);\r\n\r\n  const worldX = scaleLinear()\r\n    .domain([0, 1])\r\n    .range([area.x + area.width * 0.01, area.x + area.width * 0.99]);\r\n\r\n  const worldY = scaleLinear()\r\n    .domain([0, 1])\r\n    .range([area.y + area.height * 0.01, area.y + area.height * 0.99]);\r\n\r\n  return [scaleX, scaleY, worldX, worldY, POINT_RADIUS * factor];\r\n}\r\n\r\nexport function forceNormalization(\r\n  area: IRectangle\r\n): [ScaleLinear<number, number>, ScaleLinear<number, number>, number] {\r\n  const factor = 500 / area.width;\r\n\r\n  const scaleX = scaleLinear()\r\n    .domain([area.x, area.x + area.width])\r\n    .range([0, area.width * factor]);\r\n\r\n  const scaleY = scaleLinear()\r\n    .domain([area.y, area.y + area.height])\r\n    .range([0, area.height * factor]);\r\n\r\n  return [scaleX, scaleY, POINT_RADIUS * factor];\r\n}\r\n\r\nexport function convergeLayout<A, B extends SimulationLinkDatum<A>>(\r\n  simulation: Simulation<A, B>\r\n) {\r\n  for (\r\n    var i = 0,\r\n      n = Math.ceil(\r\n        Math.log(simulation.alphaMin()) / Math.log(1 - simulation.alphaDecay())\r\n      );\r\n    i < n;\r\n    ++i\r\n  ) {\r\n    // console.log(\"TICK\")\r\n    simulation.tick();\r\n  }\r\n}\r\n","export const POINT_RADIUS = 0.012;\r\n","/* eslint-disable no-restricted-globals */\r\nimport { IRectangle } from '../WebGL/Math/Rectangle';\r\nimport { forceNormalizationNew, scaleToWorld } from '../Layouts/ForceUtil';\r\nimport { LabelContainer } from '../Store/interfaces';\r\nimport { VectorLike } from '../Interfaces';\r\n\r\ninterface Props {\r\n  data: {\r\n    n: number;\r\n    area: IRectangle;\r\n    axis: 'x' | 'y' | 'xy';\r\n    type: string;\r\n    X: VectorLike[];\r\n  };\r\n}\r\n\r\nself.onmessage = ({\r\n  data: { n, area, type, axis, X },\r\n}: Props) => {\r\n  if (type !== 'init') {\r\n    return;\r\n  }\r\n\r\n  //const [worldX, worldY] = scaleToWorld(area);\r\n  const [a, b, worldX, worldY, r] = forceNormalizationNew(area);\r\n\r\n  const labels: LabelContainer[] = [{\r\n    discriminator: 'positionedlabels',\r\n    type: axis === 'x' ? 'x' : 'y',\r\n    labels: [],\r\n  }];\r\n\r\n  self.postMessage({\r\n    type: 'finish',\r\n    Y: X.map((node, i) => ({ x: axis !== 'y' ? worldX(0.5) : X[i].x, y: axis !== 'x' ? worldY(0.5) : X[i].y })),\r\n    labels,\r\n  });\r\n};"],"names":["scaleToWorld","area","worldX","scaleLinear","domain","range","x","width","worldY","y","height","forceNormalizationNew","factor","scaleX","scaleY","POINT_RADIUS","self","onmessage","data","n","type","axis","X","a","b","r","postMessage","Y","map","node","i","labels","discriminator"],"mappings":"4LAKO,SAASA,EACdC,CAAgB,EAKhB,IAAMC,EAAS,KAAAC,WAAA,IACZC,MAAM,CAAC,CAAC,EAAG,EAAE,EACbC,KAAK,CAAC,CAACJ,EAAKK,CAAC,CAAEL,EAAKK,CAAC,CAAGL,EAAKM,KAAK,CAAC,EAEhCC,EAAS,KAAAL,WAAA,IACZC,MAAM,CAAC,CAAC,EAAG,EAAE,EACbC,KAAK,CAAC,CAACJ,EAAKQ,CAAC,CAAER,EAAKQ,CAAC,CAAGR,EAAKS,MAAM,CAAC,EAEvC,MAAO,CAACR,EAAQM,EAAO,AACzB,CAEO,SAASG,EACdV,CAAgB,EAQhB,IAAMW,EAAS,IAAMX,EAAKM,KAAK,CAEzBM,EAAS,KAAAV,WAAA,IACZC,MAAM,CAAC,CAAC,EAAG,EAAE,EACbC,KAAK,CAAC,CAAC,EAAGJ,EAAKM,KAAK,CAAGK,EAAO,EAE3BE,EAAS,KAAAX,WAAA,IACZC,MAAM,CAAC,CAAC,EAAG,EAAE,EACbC,KAAK,CAAC,CAAC,EAAGJ,EAAKS,MAAM,CAAGE,EAAO,EAE5BV,EAAS,KAAAC,WAAA,IACZC,MAAM,CAAC,CAAC,EAAG,EAAE,EACbC,KAAK,CAAC,CAACJ,EAAKK,CAAC,CAAGL,AAAa,IAAbA,EAAKM,KAAK,CAASN,EAAKK,CAAC,CAAGL,AAAa,IAAbA,EAAKM,KAAK,CAAQ,EAE3DC,EAAS,KAAAL,WAAA,IACZC,MAAM,CAAC,CAAC,EAAG,EAAE,EACbC,KAAK,CAAC,CAACJ,EAAKQ,CAAC,CAAGR,AAAc,IAAdA,EAAKS,MAAM,CAAST,EAAKQ,CAAC,CAAGR,AAAc,IAAdA,EAAKS,MAAM,CAAQ,EAEnE,MAAO,CAACG,EAAQC,EAAQZ,EAAQM,EAAQ,EAAAO,YAAY,CAAGH,EAAO,AAChE,C,uFClDO,IAAMG,EAAe,I,8DCgB5BC,CAAAA,KAAKC,SAAS,CAAG,CAAC,CAChBC,KAAM,CAAEC,EAAAA,CAAC,CAAElB,KAAAA,CAAI,CAAEmB,KAAAA,CAAI,CAAEC,KAAAA,CAAI,CAAEC,EAAAA,CAAC,CAAE,CAC1B,IACN,GAAIF,AAAS,SAATA,EACF,OAIF,GAAM,CAACG,EAAGC,EAAGtB,EAAQM,EAAQiB,EAAE,CAAG,KAAAd,qBAAA,EAAsBV,GAQxDe,KAAKU,WAAW,CAAC,CACfN,KAAM,SACNO,EAAGL,EAAEM,GAAG,CAAC,CAACC,EAAMC,IAAO,EAAExB,EAAGe,AAAS,MAATA,EAAenB,EAAO,IAAOoB,CAAC,CAACQ,EAAE,CAACxB,CAAC,CAAEG,EAAGY,AAAS,MAATA,EAAeb,EAAO,IAAOc,CAAC,CAACQ,EAAE,CAACrB,CAAC,AAAC,IACxGsB,OAT+B,CAAC,CAChCC,cAAe,mBACfZ,KAAMC,AAAS,MAATA,EAAe,IAAM,IAC3BU,OAAQ,EAAE,AACZ,EAAE,AAMF,EACF,C"}