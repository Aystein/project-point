{"version":3,"file":"src_Workers_spaghetti_worker_ts.main.js","sources":["./src/Layouts/ForceUtil.ts","./src/Layouts/Globals.ts","./src/Workers/spaghetti.worker.ts"],"sourcesContent":["import { ScaleLinear, scaleLinear } from 'd3-scale';\nimport { IRectangle } from '../WebGL/Math/Rectangle';\nimport { Simulation, SimulationLinkDatum } from 'd3-force';\nimport { POINT_RADIUS } from './Globals';\n\nexport function scaleToWorld(\n  area: IRectangle\n): [\n  ScaleLinear<number, number>,\n  ScaleLinear<number, number>,\n] {\n  const worldX = scaleLinear()\n    .domain([0, 1])\n    .range([area.x, area.x + area.width]);\n\n  const worldY = scaleLinear()\n    .domain([0, 1])\n    .range([area.y, area.y + area.height]);\n\n  return [worldX, worldY];\n}\n\nexport function forceNormalizationNew(\n  area: IRectangle\n): [\n  ScaleLinear<number, number>,\n  ScaleLinear<number, number>,\n  ScaleLinear<number, number>,\n  ScaleLinear<number, number>,\n  number\n] {\n  const factor = 500 / area.width;\n\n  const scaleX = scaleLinear()\n    .domain([0, 1])\n    .range([0, area.width * factor]);\n\n  const scaleY = scaleLinear()\n    .domain([0, 1])\n    .range([0, area.height * factor]);\n\n  const worldX = scaleLinear()\n    .domain([0, 1])\n    .range([area.x + area.width * 0.01, area.x + area.width * 0.99]);\n\n  const worldY = scaleLinear()\n    .domain([0, 1])\n    .range([area.y + area.height * 0.01, area.y + area.height * 0.99]);\n\n  return [scaleX, scaleY, worldX, worldY, POINT_RADIUS * factor];\n}\n\nexport function forceNormalization(\n  area: IRectangle\n): [ScaleLinear<number, number>, ScaleLinear<number, number>, number] {\n  const factor = 500 / area.width;\n\n  const scaleX = scaleLinear()\n    .domain([area.x, area.x + area.width])\n    .range([0, area.width * factor]);\n\n  const scaleY = scaleLinear()\n    .domain([area.y, area.y + area.height])\n    .range([0, area.height * factor]);\n\n  return [scaleX, scaleY, POINT_RADIUS * factor];\n}\n\nexport function convergeLayout<A, B extends SimulationLinkDatum<A>>(\n  simulation: Simulation<A, B>\n) {\n  for (\n    var i = 0,\n      n = Math.ceil(\n        Math.log(simulation.alphaMin()) / Math.log(1 - simulation.alphaDecay())\n      );\n    i < n;\n    ++i\n  ) {\n    // console.log(\"TICK\")\n    simulation.tick();\n  }\n}\n","export const POINT_RADIUS = 0.012;\n","/* eslint-disable no-restricted-globals */\r\nimport groupBy from 'lodash/groupBy';\r\nimport keys from 'lodash/keys';\r\nimport { VectorLike } from '../Interfaces';\r\nimport {\r\n  forceNormalizationNew,\r\n} from '../Layouts/ForceUtil';\r\nimport { LabelContainer } from '../Store/ModelSlice';\r\nimport { IRectangle } from '../WebGL/Math/Rectangle';\r\n\r\ninterface Props {\r\n  data: {\r\n    X: { [key: string]: string | number }[];\r\n    area: IRectangle;\r\n    feature: string;\r\n    type: string;\r\n    axis: 'x' | 'y';\r\n    Y_in: VectorLike[];\r\n  };\r\n}\r\n\r\nself.onmessage = ({\r\n  data: { X, area, type, feature, axis },\r\n}: Props) => {\r\n  if (type !== 'init') {\r\n    return;\r\n  }\r\n\r\n  const labels: LabelContainer = {\r\n    discriminator: 'positionedlabels',\r\n    type: axis,\r\n    labels: [],\r\n  };\r\n\r\n  const relativeIndices = X.map((value, i) => ({\r\n    relativeIndex: i,\r\n    value,\r\n  }));\r\n\r\n  const N = X.length;\r\n  const groups = groupBy(relativeIndices, (value) => {\r\n    return value.value[feature];\r\n  });\r\n\r\n  const Y = new Array<VectorLike>(N);\r\n\r\n  const [scaleX, scaleY, worldX, worldY, radius] = forceNormalizationNew(area);\r\n\r\n  let stepSize = 1 / (keys(groups).length + 1);\r\n  let centerX = stepSize;\r\n  \r\n  const maxGroupLength = Math.max(...keys(groups).map((key) => groups[key].length))\r\n\r\n  for (const key of keys(groups)) {\r\n    const group = groups[key];\r\n\r\n    labels.labels.push({ position: centerX, content: key });\r\n\r\n    group.forEach((item, i) => {\r\n      Y[item.relativeIndex] = { x: axis === 'y' ? i / maxGroupLength : centerX, y: axis === 'y' ? centerX : i / maxGroupLength };\r\n    });\r\n\r\n    centerX += stepSize;\r\n  }\r\n\r\n  self.postMessage({\r\n    type: 'finish',\r\n    // @ts-ignore\r\n    Y: Y.map((value) => ({ x: worldX(value.x), y: worldY(value.y) })),\r\n    labels: [labels],\r\n  });\r\n};\r\n"],"names":["scaleToWorld","area","worldX","scaleLinear","domain","range","x","width","worldY","y","height","forceNormalizationNew","factor","scaleX","scaleY","POINT_RADIUS","self","onmessage","data","X","type","feature","axis","labels","discriminator","relativeIndices","map","value","i","relativeIndex","N","length","groups","Y","Array","radius","stepSize","centerX","maxGroupLength","Math","max","key","group","push","position","content","forEach","item","postMessage"],"mappings":"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"}