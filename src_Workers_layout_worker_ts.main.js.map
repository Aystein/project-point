{"version":3,"file":"src_Workers_layout_worker_ts.main.js","sources":["./src/Layouts/Globals.ts","./src/WebGL/Math/Rectangle.ts","./src/Workers/layout.worker.ts","./src/Workers/util.ts"],"sourcesContent":["export const POINT_RADIUS = 0.012;\n","import { VectorLike } from '../../Interfaces';\n\nexport interface IRectangle {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport class Rectangle {\n  x: number;\n\n  y: number;\n\n  width: number;\n\n  height: number;\n\n  constructor(x: number, y: number, width: number, height: number) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n\n  within(vector: VectorLike) {\n    return (\n      vector.x > this.x &&\n      vector.x < this.x + this.width &&\n      vector.y > this.y &&\n      vector.y < this.y + this.height\n    );\n  }\n\n  serialize(): IRectangle {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height,\n    };\n  }\n\n  percent(xp: number, yp: number) {\n    return { x: this.x + this.width * xp,\n      y: this.y + this.height * yp }\n  }\n\n  percentX(x: number) {\n    return (x - this.x) / this.width\n  }\n\n  percentY(y: number) {\n    return (y - this.y) / this.height\n  }\n\n  get centerX() {\n    return this.x + this.width / 2;\n  }\n\n  get centerY() {\n    return this.y + this.height / 2;\n  }\n\n  static deserialize(dump: IRectangle) {\n    return new Rectangle(dump.x, dump.y, dump.width, dump.height);\n  }\n}\n","/* eslint-disable no-restricted-globals */\nimport { forceNormalizationNew } from \"../Layouts/ForceUtil\";\nimport { POINT_RADIUS } from \"../Layouts/Globals\";\nimport { IRectangle } from \"../WebGL/Math/Rectangle\";\nimport { fillRect } from \"./util\";\n\ntype Commands = 'init' | 'fill_rect'\n\ninterface Props {\n    data: {\n        N: number;\n        area: IRectangle;\n        type: Commands;\n        radius?: number;\n    };\n}\n\nself.onmessage = ({\n    data: { N, area, type, radius = POINT_RADIUS },\n}: Props) => {\n    /** Generate N points in a rectangle that has the same aspect ratio as the area */\n    if (type === 'fill_rect') {\n        const { Y } = fillRect(area, N, radius);\n\n        self.postMessage({\n            type: 'finish',\n            Y,\n        });\n    }\n\n}","import { POINT_RADIUS } from \"../Layouts/Globals\";\nimport { IRectangle, Rectangle } from \"../WebGL/Math/Rectangle\";\n\nexport function UpdateText(self: Window, value: string) {\n  self.postMessage({\n    type: 'message',\n    message: 'Calculating embedding ...',\n  });\n}\n\n\n\n\nexport function fillRect(area: IRectangle, N: number, radius = POINT_RADIUS) {\n  if (area.width === 0 || area.height === 0) console.log(area)\n\n  const c = radius * 3;\n  const A = c ** 2 * N;\n\n  let aspectRatio = area.width / area.height;\n\n  let h = Math.sqrt(A / aspectRatio);\n  let w = A / h;\n\n  w = Math.ceil(w / c);\n  h = Math.ceil(h / c);\n\n  const offX = area.x + area.width / 2 - (w / 2) * c;\n  const offY = area.y + area.height / 2 - (h / 2) * c;\n\n  const Y = Array.from({ length: N }).map((_, i) => ({ x: (i % w) * c, y: Math.floor(i / w) * c }))\n  return { Y: Y.map((value) => ({ x: offX + value.x + c / 2, y: offY + value.y + c / 2 })), bounds: Rectangle.deserialize({ x: offX, y: offY, width: (w) * c, height: (h) * c }) as Rectangle };\n}"],"names":["POINT_RADIUS","Rectangle","x","y","width","height","constructor","within","vector","serialize","percent","xp","yp","percentX","percentY","centerX","centerY","deserialize","dump","self","onmessage","data","N","area","type","radius","Y","fillRect","postMessage","console","log","c","A","h","Math","sqrt","w","ceil","offX","offY","Array","from","length","map","_","i","floor","value","bounds"],"mappings":"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"}