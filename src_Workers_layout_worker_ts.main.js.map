{"version":3,"file":"src_Workers_layout_worker_ts.main.js","sources":["./src/Layouts/Globals.ts","./src/Workers/layout.worker.ts","./src/Workers/util.ts"],"sourcesContent":["export const POINT_RADIUS = 0.012;\n","/* eslint-disable no-restricted-globals */\r\nimport { forceNormalizationNew } from \"../Layouts/ForceUtil\";\r\nimport { POINT_RADIUS } from \"../Layouts/Globals\";\r\nimport { IRectangle } from \"../WebGL/Math/Rectangle\";\r\nimport { fillRect } from \"./util\";\r\n\r\ntype Commands = 'init' | 'fill_rect'\r\n\r\ninterface Props {\r\n    data: {\r\n        N: number;\r\n        area: IRectangle;\r\n        type: Commands;\r\n        radius?: number;\r\n    };\r\n}\r\n\r\nself.onmessage = ({\r\n    data: { N, area, type, radius = POINT_RADIUS },\r\n}: Props) => {\r\n    /** Generate N points in a rectangle that has the same aspect ratio as the area */\r\n    if (type === 'fill_rect') {\r\n        const Y = fillRect(area, N, radius);\r\n\r\n        self.postMessage({\r\n            type: 'finish',\r\n            Y,\r\n        });\r\n    }\r\n\r\n}","import { POINT_RADIUS } from \"../Layouts/Globals\";\nimport { IRectangle } from \"../WebGL/Math/Rectangle\";\n\nexport function UpdateText(self: Window, value: string) {\n  self.postMessage({\n    type: 'message',\n    message: 'Calculating embedding ...',\n  });\n}\n\n\n\n\nexport function fillRect(area: IRectangle, N: number, radius = POINT_RADIUS) {\n  const c = radius * 3;\n  const A = c ** 2 * N;\n\n  let aspectRatio = area.width / area.height;\n\n  let h = Math.sqrt(A / aspectRatio);\n  let w = A / h;\n\n  w = Math.ceil(w / c);\n  h = Math.ceil(h / c);\n\n  const offX = area.x + area.width / 2 - (w / 2) * c;\n  const offY = area.y + area.height / 2 - (h / 2) * c;\n\n  const Y = Array.from({ length: N }).map((_, i) => ({ x: (i % w) * c, y: Math.floor(i / w) * c }))\n  return Y.map((value) => ({ x: offX + value.x, y: offY + value.y }));\n}"],"names":["POINT_RADIUS","self","onmessage","data","N","area","type","radius","Y","fillRect","postMessage","c","A","h","Math","sqrt","width","height","w","ceil","offX","x","offY","y","Array","from","length","map","_","i","floor","value"],"mappings":"wGAAO,IAAMA,EAAe,I,0ECiB5BC,CAAAA,KAAKC,SAAS,CAAG,CAAC,CACdC,KAAM,CAAEC,EAAAA,CAAC,CAAEC,KAAAA,CAAI,CAAEC,KAAAA,CAAI,CAAEC,OAAAA,EAAS,EAAAP,YAAY,CAAE,CAC1C,IAEJ,GAAIM,AAAS,cAATA,EAAsB,CACtB,IAAME,EAAI,KAAAC,QAAA,EAASJ,EAAMD,EAAGG,GAE5BN,KAAKS,WAAW,CAAC,CACbJ,KAAM,SACNE,EAAAA,CACJ,EACJ,CAEJ,C,qGCjBO,SAASC,EAASJ,CAAgB,CAAED,CAAS,CAAEG,EAAS,EAAAP,YAAY,EACzE,IAAMW,EAAIJ,AAAS,EAATA,EACJK,EAAID,GAAK,EAAIP,EAIfS,EAAIC,KAAKC,IAAI,CAACH,EAFAP,CAAAA,EAAKW,KAAK,CAAGX,EAAKY,MAAM,AAAD,GAGrCC,EAAIN,EAAIC,EAEZK,EAAIJ,KAAKK,IAAI,CAACD,EAAIP,GAClBE,EAAIC,KAAKK,IAAI,CAACN,EAAIF,GAElB,IAAMS,EAAOf,EAAKgB,CAAC,CAAGhB,EAAKW,KAAK,CAAG,EAAKE,EAAI,EAAKP,EAC3CW,EAAOjB,EAAKkB,CAAC,CAAGlB,EAAKY,MAAM,CAAG,EAAKJ,EAAI,EAAKF,EAE5CH,EAAIgB,MAAMC,IAAI,CAAC,CAAEC,OAAQtB,CAAE,GAAGuB,GAAG,CAAC,CAACC,EAAGC,IAAO,EAAER,EAAIQ,EAAIX,EAAKP,EAAGY,EAAGT,KAAKgB,KAAK,CAACD,EAAIX,GAAKP,CAAE,IAC9F,OAAOH,EAAEmB,GAAG,CAAC,AAACI,GAAW,EAAEV,EAAGD,EAAOW,EAAMV,CAAC,CAAEE,EAAGD,EAAOS,EAAMR,CAAC,AAAC,GAClE,C"}