{"version":3,"file":"src_Workers_group_worker_ts.main.js","sources":["./src/Layouts/ForceUtil.ts","./src/Layouts/Globals.ts","./src/Workers/group.worker.ts"],"sourcesContent":["import { ScaleLinear, scaleLinear } from 'd3-scale';\nimport { IRectangle } from '../WebGL/Math/Rectangle';\nimport { Simulation, SimulationLinkDatum } from 'd3-force';\nimport { POINT_RADIUS } from './Globals';\n\nexport function scaleToWorld(\n  area: IRectangle\n): [\n  ScaleLinear<number, number>,\n  ScaleLinear<number, number>,\n] {\n  const worldX = scaleLinear()\n    .domain([0, 1])\n    .range([area.x, area.x + area.width]);\n\n  const worldY = scaleLinear()\n    .domain([0, 1])\n    .range([area.y, area.y + area.height]);\n\n  return [worldX, worldY];\n}\n\nexport function forceNormalizationNew(\n  area: IRectangle\n): [\n  ScaleLinear<number, number>,\n  ScaleLinear<number, number>,\n  ScaleLinear<number, number>,\n  ScaleLinear<number, number>,\n  number\n] {\n  const factor = 500 / area.width;\n\n  const scaleX = scaleLinear()\n    .domain([0, 1])\n    .range([0, area.width * factor]);\n\n  const scaleY = scaleLinear()\n    .domain([0, 1])\n    .range([0, area.height * factor]);\n\n  const worldX = scaleLinear()\n    .domain([0, 1])\n    .range([area.x + area.width * 0.01, area.x + area.width * 0.99]);\n\n  const worldY = scaleLinear()\n    .domain([0, 1])\n    .range([area.y + area.height * 0.01, area.y + area.height * 0.99]);\n\n  return [scaleX, scaleY, worldX, worldY, POINT_RADIUS * factor];\n}\n\nexport function forceNormalization(\n  area: IRectangle\n): [ScaleLinear<number, number>, ScaleLinear<number, number>, number] {\n  const factor = 500 / area.width;\n\n  const scaleX = scaleLinear()\n    .domain([area.x, area.x + area.width])\n    .range([0, area.width * factor]);\n\n  const scaleY = scaleLinear()\n    .domain([area.y, area.y + area.height])\n    .range([0, area.height * factor]);\n\n  return [scaleX, scaleY, POINT_RADIUS * factor];\n}\n\nexport function convergeLayout<A, B extends SimulationLinkDatum<A>>(\n  simulation: Simulation<A, B>\n) {\n  for (\n    var i = 0,\n      n = Math.ceil(\n        Math.log(simulation.alphaMin()) / Math.log(1 - simulation.alphaDecay())\n      );\n    i < n;\n    ++i\n  ) {\n    // console.log(\"TICK\")\n    simulation.tick();\n  }\n}\n","export const POINT_RADIUS = 0.012;\n","/* eslint-disable no-restricted-globals */\r\nimport * as d3 from 'd3-force';\r\nimport { IRectangle, Rectangle } from '../WebGL/Math/Rectangle';\r\nimport { scaleLinear } from 'd3-scale';\r\nimport groupBy from 'lodash/groupBy';\r\nimport keys from 'lodash/keys';\r\nimport { VectorLike } from '../Interfaces';\r\nimport {\r\n  convergeLayout,\r\n  forceNormalization,\r\n  forceNormalizationNew,\r\n} from '../Layouts/ForceUtil';\r\nimport { LabelContainer } from '../Store/ModelSlice';\r\nimport { EntryOptionPlugin } from 'webpack';\r\n\r\ninterface Props {\r\n  data: {\r\n    X: { [key: string]: string | number }[];\r\n    area: IRectangle;\r\n    feature: string;\r\n    type: string;\r\n    axis: 'x' | 'y';\r\n    xLayout: number[];\r\n    yLayout: number[];\r\n  };\r\n}\r\n\r\nself.onmessage = ({\r\n  data: { X, area, type, feature, xLayout, yLayout },\r\n}: Props) => {\r\n  if (type !== 'init') {\r\n    return;\r\n  }\r\n\r\n  const labels: LabelContainer = {\r\n    discriminator: 'positionedlabels',\r\n    type: 'x',\r\n    labels: [],\r\n  };\r\n\r\n  self.postMessage({\r\n    type: 'message',\r\n    message: 'Calculating groups',\r\n  });\r\n\r\n  const relativeIndices = X.map((value, i) => ({\r\n    relativeIndex: i,\r\n    value,\r\n  }));\r\n\r\n  const N = X.length;\r\n  const groups = groupBy(relativeIndices, (value) => {\r\n    return value.value[feature];\r\n  });\r\n\r\n  const Y = new Array<VectorLike>(N);\r\n\r\n  const [scaleX, scaleY, worldX, worldY, radius] = forceNormalizationNew(area);\r\n\r\n  const padding = 1 / (keys(groups).length + 10);\r\n  let usedSpace = padding;\r\n\r\n  let leftSpace = 1 - padding * (keys(groups).length + 1);\r\n\r\n  for (const key of keys(groups)) {\r\n    const group = groups[key];\r\n\r\n    const portion = leftSpace * (group.length / N);\r\n    const centerX = usedSpace + portion / 2;\r\n\r\n    labels.labels.push({ position: centerX, content: key });\r\n\r\n    usedSpace += portion + padding;\r\n\r\n    const extent = portion / 3;\r\n\r\n    group.forEach((item, i) => {\r\n      Y[item.relativeIndex] = { x: centerX + (-2 + Math.random()) * extent, y: yLayout[item.relativeIndex] };\r\n    });\r\n  }\r\n\r\n  self.postMessage({\r\n    type: 'finish',\r\n    // @ts-ignore\r\n    Y: Y.map((value) => ({ x: worldX(value.x), y: worldY(value.y) })),\r\n    xLayout: Y.map((value) => value.x),\r\n    yLayout: Y.map((value) => value.y),\r\n    labels: [labels],\r\n  });\r\n};\r\n"],"names":["scaleToWorld","area","worldX","scaleLinear","domain","range","x","width","worldY","y","height","forceNormalizationNew","factor","scaleX","scaleY","POINT_RADIUS","self","onmessage","data","X","type","feature","xLayout","yLayout","labels","discriminator","postMessage","message","relativeIndices","map","value","i","relativeIndex","N","length","groups","Y","Array","radius","padding","usedSpace","leftSpace","key","group","portion","centerX","push","position","content","extent","forEach","item","Math","random"],"mappings":"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"}